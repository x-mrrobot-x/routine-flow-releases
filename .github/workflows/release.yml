name: Create Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            COMMITS=$(git log --pretty=format:"%s" $PREVIOUS_TAG..HEAD)
          else
            COMMITS=$(git log --pretty=format:"%s")
          fi

          FEATURES=$(echo "$COMMITS" | grep -E "^feat:" | sed 's/^feat: /- ‚ú® /' || true)
          FIXES=$(echo "$COMMITS" | grep -E "^fix:" | sed 's/^fix: /- üêõ /' || true)
          STYLES=$(echo "$COMMITS" | grep -E "^style:" | sed 's/^style: /- üé® /' || true)
          DOCS=$(echo "$COMMITS" | grep -E "^docs:" | sed 's/^docs: /- üìö /' || true)
          OTHERS=$(echo "$COMMITS" | grep -vE "^(feat|fix|style|docs):" | sed 's/^/- üîß /' || true)

          cat << 'EOF' > release_notes.md
          ## üì± Routine Flow - ${{ github.ref_name }}

          ### üöÄ Como Instalar
          1. Baixe o arquivo XML anexado abaixo
          2. Abra o Tasker
          3. Fa√ßa um clique longo em qualquer projeto existente
          4. Selecione "Import Project" no menu que aparecer
          5. selecione o arquivo XML baixado

          ### üìã Changelog
          EOF

          if [ -n "$FEATURES" ]; then
            echo "#### ‚ú® Novas Funcionalidades" >> release_notes.md
            echo "$FEATURES" >> release_notes.md
            echo "" >> release_notes.md
          fi

          if [ -n "$FIXES" ]; then
            echo "#### üêõ Corre√ß√µes" >> release_notes.md
            echo "$FIXES" >> release_notes.md
            echo "" >> release_notes.md
          fi

          if [ -n "$STYLES" ]; then
            echo "#### üé® Melhorias de Interface" >> release_notes.md
            echo "$STYLES" >> release_notes.md
            echo "" >> release_notes.md
          fi

          if [ -n "$DOCS" ]; then
            echo "#### üìö Documenta√ß√£o" >> release_notes.md
            echo "$DOCS" >> release_notes.md
            echo "" >> release_notes.md
          fi

          if [ -n "$OTHERS" ]; then
            echo "#### üîß Outras Altera√ß√µes" >> release_notes.md
            echo "$OTHERS" >> release_notes.md
            echo "" >> release_notes.md
          fi

          cat << 'EOF' >> release_notes.md

          ### üõ†Ô∏è Requisitos
          - Tasker vers√£o 5.0+
          - ADB Wifi (opcional)

          ### üìû Suporte
          Encontrou algum problema? [Abra uma issue](https://github.com/${{ github.repository }}/issues)
          EOF

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            --title "Release ${{ github.ref_name }}" \
            --notes-file release_notes.md

          # Procurar por arquivos XML
          xml_files=$(find . -name "*.xml" -type f | head -5)

          if [ -n "$xml_files" ]; then
            echo "Arquivos XML encontrados:"
            echo "$xml_files"
            
            for xml_file in $xml_files; do
              echo "Fazendo upload: $xml_file"
              gh release upload ${{ github.ref_name }} "$xml_file" --clobber
            done
          else
            echo "Nenhum arquivo XML encontrado para upload"
          fi

