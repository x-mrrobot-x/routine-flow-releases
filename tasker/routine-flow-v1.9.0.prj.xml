<TaskerData sr="" dvi="1" tv="6.6.3-beta">
	<dmetric>1080.0,2307.0</dmetric>
	<Profile sr="prof417" ve="2">
		<cdate>1757342154420</cdate>
		<cldm>60</cldm>
		<clp>true</clp>
		<edate>1756932275114</edate>
		<flags>40</flags>
		<id>417</id>
		<limit>true</limit>
		<mid0>386</mid0>
		<nme>RF - ROUTINE EXECUTION TIMER</nme>
		<Time sr="con0">
			<fromvar>%next_routine_time</fromvar>
			<tovar>%next_routine_time</tovar>
		</Time>
	</Profile>
	<Project sr="proj0" ve="2">
		<cdate>1751000000000</cdate>
		<name>ROUTINE FLOW</name>
		<pids>417</pids>
		<scenes>RF 02 - MATRIX LOADER,RF 01 - ROUTINE MANAGER UI</scenes>
		<ssort>Alpha</ssort>
		<tids>388,386,406,412,413,391,387,389,397,408,384,395,385,410,414</tids>
		<tsort>Alpha</tsort>
		<Share sr="Share">
			<b>false</b>
			<d>&lt;!doctype html&gt;
&lt;html lang="pt-BR"&gt;
  &lt;head&gt;
    &lt;meta charset="UTF-8" /&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&gt;
    &lt;title&gt;Routine Flow Description&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h2&gt;üöÄ Routine Flow v1.2 üöÄ&lt;/h2&gt;

    &lt;fieldset&gt;
      &lt;legend&gt;English&lt;/legend&gt;
      &lt;section&gt;
        &lt;h4&gt;üìù DESCRIPTION&lt;/h4&gt;
        &lt;p&gt;
          An advanced routine manager that allows creating, scheduling, notifying and executing automated actions at specific times and days. From opening apps and toggling Wi-Fi to performing complex fully customized commands.
        &lt;/p&gt;
      &lt;/section&gt;

      &lt;section&gt;
        &lt;h4&gt;üìå FEATURES&lt;/h4&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;Complete routine management&lt;/strong&gt; with creation, editing and deletion.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Smart scheduling&lt;/strong&gt; by specific times and days of the week.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Customizable categories&lt;/strong&gt; with colors and custom names for organization.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Priority system&lt;/strong&gt; (low, medium, high) with visual indicators.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Pre-defined commands&lt;/strong&gt; for common actions (open/close apps, control connectivity, etc.).&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Advanced filters&lt;/strong&gt; by text, status, priority, day of the week and command.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Chronological sorting&lt;/strong&gt; with next routine always visible.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Customizable notifications&lt;/strong&gt; (voice, toast, vibration).&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Multi-language support&lt;/strong&gt; (Portuguese, English, Spanish).&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Responsive interface&lt;/strong&gt; with automatic light/dark theme.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/section&gt;

      &lt;p&gt;&lt;em&gt;by x-mrrobot&lt;/em&gt;&lt;/p&gt;
    &lt;/fieldset&gt;

    &lt;br /&gt;

    &lt;fieldset&gt;
      &lt;legend&gt;Portugu√™s&lt;/legend&gt;
      &lt;section&gt;
        &lt;h4&gt;üìù DESCRI√á√ÉO&lt;/h4&gt;
        &lt;p&gt;
          Um gerenciador avan√ßado de rotinas que permite criar, agendar, notificar e executar a√ß√µes automatizadas em hor√°rios e dias espec√≠ficos. Desde abrir aplicativos e alternar o Wi-Fi at√© realizar comandos complexos totalmente personalizados.
        &lt;/p&gt;
      &lt;/section&gt;

      &lt;section&gt;
        &lt;h4&gt;üìå RECURSOS&lt;/h4&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;Gerenciamento completo de rotinas&lt;/strong&gt; com cria√ß√£o, edi√ß√£o e exclus√£o.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Agendamento inteligente&lt;/strong&gt; por hor√°rios e dias da semana espec√≠ficos.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Categorias personaliz√°veis&lt;/strong&gt; com cores e nomes customiz√°veis para organiza√ß√£o.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Sistema de prioridades&lt;/strong&gt; (baixa, m√©dia, alta) com indicadores visuais.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Comandos pr√©-definidos&lt;/strong&gt; para a√ß√µes comuns (abrir/fechar apps, controlar conectividade, etc.).&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Filtros avan√ßados&lt;/strong&gt; por texto, status, prioridade, dia da semana e comando.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Ordena√ß√£o cronol√≥gica&lt;/strong&gt; com pr√≥xima rotina sempre vis√≠vel.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Notifica√ß√µes customiz√°veis&lt;/strong&gt; (voz, toast, vibra√ß√£o).&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Suporte multi-idioma&lt;/strong&gt; (Portugu√™s, Ingl√™s, Espanhol).&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Interface responsiva&lt;/strong&gt; com tema claro/escuro autom√°tico.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/section&gt;

      &lt;p&gt;&lt;em&gt;by x-mrrobot&lt;/em&gt;&lt;/p&gt;
    &lt;/fieldset&gt;

    &lt;br /&gt;

    &lt;fieldset&gt;
      &lt;legend&gt;Espa√±ol&lt;/legend&gt;
      &lt;section&gt;
        &lt;h4&gt;üìù DESCRIPCI√ìN&lt;/h4&gt;
        &lt;p&gt;
          Un gestor avanzado de rutinas que permite crear, programar, notificar y ejecutar acciones automatizadas en horarios y d√≠as espec√≠ficos. Desde abrir aplicaciones y alternar Wi-Fi hasta realizar comandos complejos totalmente personalizados.
        &lt;/p&gt;
      &lt;/section&gt;

      &lt;section&gt;
        &lt;h4&gt;üìå CARACTER√çSTICAS&lt;/h4&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;Gesti√≥n completa de rutinas&lt;/strong&gt; con creaci√≥n, edici√≥n y eliminaci√≥n.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Programaci√≥n inteligente&lt;/strong&gt; por horarios y d√≠as de la semana espec√≠ficos.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Categor√≠as personalizables&lt;/strong&gt; con colores y nombres personalizados para organizaci√≥n.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Sistema de prioridades&lt;/strong&gt; (baja, media, alta) con indicadores visuales.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Comandos predefinidos&lt;/strong&gt; para acciones comunes (abrir/cerrar apps, controlar conectividad, etc.).&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Filtros avanzados&lt;/strong&gt; por texto, estado, prioridad, d√≠a de la semana y comando.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Ordenaci√≥n cronol√≥gica&lt;/strong&gt; con pr√≥xima rutina siempre visible.&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Notificaciones personalizables&lt;/strong&gt; (voz, toast, vibraci√≥n).&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Soporte multi-idioma&lt;/strong&gt; (Portugu√©s, Ingl√©s, Espa√±ol).&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Interfaz responsiva&lt;/strong&gt; con tema claro/oscuro autom√°tico.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/section&gt;

      &lt;p&gt;&lt;em&gt;by x-mrrobot&lt;/em&gt;&lt;/p&gt;
    &lt;/fieldset&gt;
  &lt;/body&gt;
&lt;/html&gt;</d>
			<g>Utility,Web,WiFi</g>
			<p>true</p>
			<t>RF 01 - SHOW ROUTINE MANAGER</t>
		</Share>
		<ProfileVariable sr="pv0">
			<clearout>false</clearout>
			<exportval></exportval>
			<immutable>false</immutable>
			<pvci>false</pvci>
			<pvd>Armazena o timestamp epoch (segundos) completo da pr√≥xima rotina para o gatilho de perfil.</pvd>
			<pvdn>Next Epoch Trigger</pvdn>
			<pvid>1</pvid>
			<pvit>pj</pvit>
			<pvn>%next_routine_time</pvn>
			<pvt>n</pvt>
			<strout>false</strout>
		</ProfileVariable>
		<ProfileVariable sr="pv1">
			<clearout>false</clearout>
			<exportval>0</exportval>
			<immutable>false</immutable>
			<pvci>false</pvci>
			<pvd>√çndice (1-based) da rotina no array JSON que est√° atualmente agendada.</pvd>
			<pvdn>Index Of The Next Routine</pvdn>
			<pvid>1</pvid>
			<pvit>pj</pvit>
			<pvn>%next_routine_index</pvn>
			<pvt>n</pvt>
			<pvv>0</pvv>
			<strout>false</strout>
		</ProfileVariable>
		<ProfileVariable sr="pv2">
			<clearout>true</clearout>
			<exportval></exportval>
			<immutable>true</immutable>
			<pvci>false</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>1</pvid>
			<pvit>pj</pvit>
			<pvn>%project_version</pvn>
			<pvt>t</pvt>
			<pvv>1.2</pvv>
			<strout>false</strout>
		</ProfileVariable>
		<ProfileVariable sr="pv3">
			<clearout>true</clearout>
			<exportval></exportval>
			<immutable>true</immutable>
			<pvci>false</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>1</pvid>
			<pvit>pj</pvit>
			<pvn>%project_path</pvn>
			<pvt>d</pvt>
			<pvv>/sdcard/Tasker/Routine Flow</pvv>
			<strout>false</strout>
		</ProfileVariable>
		<ProfileVariable sr="pv4">
			<clearout>false</clearout>
			<exportval></exportval>
			<immutable>false</immutable>
			<pvci>false</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>1</pvid>
			<pvit>pj</pvit>
			<pvn>%pkgs_hash</pvn>
			<pvt>t</pvt>
			<strout>false</strout>
		</ProfileVariable>
	</Project>
	<Scene sr="sceneRF 01 - ROUTINE MANAGER UI">
		<cdate>1747394226556</cdate>
		<edate>1756935301156</edate>
		<heightLand>1080</heightLand>
		<heightPort>2400</heightPort>
		<nme>RF 01 - ROUTINE MANAGER UI</nme>
		<widthLand>2307</widthLand>
		<widthPort>1080</widthPort>
		<WebElement sr="elements0" ve="2">
			<flags>6</flags>
			<geom>0,0,1080,2400,0,0,2307,1080</geom>
			<Str sr="arg0" ve="3">ROUTINE FLOW</Str>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">&lt;!doctype html&gt;
&lt;html lang="pt-BR"&gt;
  &lt;head&gt;
    &lt;meta charset="UTF-8" /&gt;
    &lt;meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
    /&gt;
    &lt;title&gt;Routine Flow - Gerenciador de Rotinas&lt;/title&gt;

    &lt;!-- Styles --&gt;
    &lt;link
      rel="stylesheet"
      href="%project_path/src/assets/styles/variables.css"
    /&gt;
    &lt;link rel="stylesheet" href="%project_path/src/assets/styles/reset.css" /&gt;
    &lt;link rel="stylesheet" href="%project_path/src/assets/styles/shared.css" /&gt;
    &lt;link rel="stylesheet" href="%project_path/src/assets/styles/base.css" /&gt;
    &lt;link rel="stylesheet" href="%project_path/src/assets/styles/button.css" /&gt;
    &lt;link rel="stylesheet" href="%project_path/src/assets/styles/header.css" /&gt;
    &lt;link rel="stylesheet" href="%project_path/src/assets/styles/filters.css" /&gt;
    &lt;link rel="stylesheet" href="%project_path/src/assets/styles/form.css" /&gt;
    &lt;link rel="stylesheet" href="%project_path/src/assets/styles/main.css" /&gt;
    &lt;link rel="stylesheet" href="%project_path/src/assets/styles/modal.css" /&gt;
    &lt;link
      rel="stylesheet"
      href="%project_path/src/assets/styles/categories.css"
    /&gt;
    &lt;link
      rel="stylesheet"
      href="%project_path/src/assets/styles/routines.css"
    /&gt;
    &lt;link
      rel="stylesheet"
      href="%project_path/src/assets/styles/commands.css"
    /&gt;
    &lt;link
      rel="stylesheet"
      href="%project_path/src/assets/styles/app-picker.css"
    /&gt;
    &lt;link
      rel="stylesheet"
      href="%project_path/src/assets/styles/task-picker.css"
    /&gt;
    &lt;link
      rel="stylesheet"
      href="%project_path/src/assets/styles/settings.css"
    /&gt;
    &lt;link rel="stylesheet" href="%project_path/src/assets/styles/toast.css" /&gt;
    &lt;link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&amp;display=swap"
      rel="stylesheet"
    /&gt;

    &lt;!-- Scripts --&gt;
    &lt;script
      src="%project_path/src/services/EnvironmentManager.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script src="%project_path/src/shared/Utils.js" defer&gt;&lt;/script&gt;
    &lt;script src="%project_path/src/shared/DOM.js" defer&gt;&lt;/script&gt;
    &lt;script src="%project_path/src/services/I18n.js" defer&gt;&lt;/script&gt;
    &lt;script src="%project_path/src/services/Icons.js" defer&gt;&lt;/script&gt;
    &lt;script src="%project_path/src/services/TimeService.js" defer&gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/services/PaginationManager.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script src="%project_path/src/components/Modal.js" defer&gt;&lt;/script&gt;
    &lt;script src="%project_path/src/components/Toast.js" defer&gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/categories/data/categories.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/routine/data/routines.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/routine/services/RoutineService.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/categories/services/CategoryService.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/categories/components/CategoryRenderer.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/routine/components/RoutineRenderer.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/routine/services/RoutineFilter.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/routine/components/CommandDropdown.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/routine/services/RoutineActions.js"
      defer
    &gt;&lt;/script&gt;

    &lt;script
      src="%project_path/src/features/categories/components/CategoryForm.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/categories/components/CategoryModal.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/routine/components/RoutineForm.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/routine/components/RoutineModal.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/routine/components/DeleteRoutineModal.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/routine/components/AppPickerModal.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/routine/components/TaskPickerModal.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/settings/SettingsService.js"
      defer
    &gt;&lt;/script&gt;
    &lt;script
      src="%project_path/src/features/settings/SettingsModal.js"
      defer
    &gt;&lt;/script&gt;

    &lt;script src="%project_path/src/services/EventBus.js" defer&gt;&lt;/script&gt;
    &lt;script src="%project_path/src/App.js" defer&gt;&lt;/script&gt;
  &lt;/head&gt;

  &lt;body class="loading"&gt;
    &lt;div class="app-container" id="app-container"&gt;
      &lt;!-- Header --&gt;
      &lt;header class="header"&gt;
        &lt;div class="header-title"&gt;
          &lt;i data-icon="calendar-clock" class="logo-icon"&gt;&lt;/i&gt;
          &lt;h1 class="logo-text text-gradient"&gt;Routine Flow&lt;/h1&gt;
        &lt;/div&gt;
        &lt;button id="settings-btn" class="settings-button"&gt;
          &lt;i data-icon="settings-2"&gt;&lt;/i&gt;
        &lt;/button&gt;
      &lt;/header&gt;

      &lt;!-- Main --&gt;
      &lt;main class="main"&gt;
        &lt;!-- Filters --&gt;
        &lt;div class="filters-bar" id="filters-bar"&gt;
          &lt;div class="filters-header"&gt;
            &lt;button id="toggle-filters-btn" class="toggle-filters-btn"&gt;
              &lt;i data-icon="filter"&gt;&lt;/i&gt;
              &lt;span data-i18n="filters_title"&gt;Filtros&lt;/span&gt;
              &lt;i class="filter-chevron" data-icon="chevron-down"&gt;&lt;/i&gt;
            &lt;/button&gt;
          &lt;/div&gt;

          &lt;div class="search-wrapper"&gt;
            &lt;i data-icon="search"&gt;&lt;/i&gt;
            &lt;input
              type="text"
              id="search-filter"
              placeholder="Buscar rotinas..."
              class="input-search"
              data-i18n="search_placeholder"
            /&gt;
          &lt;/div&gt;

          &lt;div class="advanced-filters"&gt;
            &lt;div class="filter-group"&gt;
              &lt;label for="status-filter" data-i18n="status_filter_label"
                &gt;Status&lt;/label
              &gt;
              &lt;div class="select-wrapper"&gt;
                &lt;select id="status-filter" class="select"&gt;
                  &lt;option value="all" data-i18n="status_all"&gt;Todas&lt;/option&gt;
                  &lt;option value="active" data-i18n="status_active"&gt;
                    Ativas
                  &lt;/option&gt;
                  &lt;option value="inactive" data-i18n="status_inactive"&gt;
                    Inativas
                  &lt;/option&gt;
                &lt;/select&gt;
              &lt;/div&gt;
            &lt;/div&gt;

            &lt;div class="filter-group"&gt;
              &lt;label for="priority-filter" data-i18n="priority_filter_label"
                &gt;Prioridade&lt;/label
              &gt;
              &lt;div class="select-wrapper"&gt;
                &lt;select id="priority-filter" class="select"&gt;
                  &lt;option value="all" data-i18n="priority_all"&gt;Todas&lt;/option&gt;
                  &lt;option value="high" data-i18n="priority_high"&gt;Alta&lt;/option&gt;
                  &lt;option value="medium" data-i18n="priority_medium"&gt;
                    M√©dia
                  &lt;/option&gt;
                  &lt;option value="low" data-i18n="priority_low"&gt;Baixa&lt;/option&gt;
                &lt;/select&gt;
              &lt;/div&gt;
            &lt;/div&gt;

            &lt;div class="filter-group"&gt;
              &lt;label for="day-filter" data-i18n="day_filter_label"
                &gt;Dia da semana&lt;/label
              &gt;
              &lt;div class="select-wrapper"&gt;
                &lt;select id="day-filter" class="select"&gt;
                  &lt;option value="all" data-i18n="day_all"&gt;Todos&lt;/option&gt;
                  &lt;option value="0" data-i18n="day_sunday"&gt;Domingo&lt;/option&gt;
                  &lt;option value="1" data-i18n="day_monday"&gt;Segunda&lt;/option&gt;
                  &lt;option value="2" data-i18n="day_tuesday"&gt;Ter√ßa&lt;/option&gt;
                  &lt;option value="3" data-i18n="day_wednesday"&gt;Quarta&lt;/option&gt;
                  &lt;option value="4" data-i18n="day_thursday"&gt;Quinta&lt;/option&gt;
                  &lt;option value="5" data-i18n="day_friday"&gt;Sexta&lt;/option&gt;
                  &lt;option value="6" data-i18n="day_saturday"&gt;S√°bado&lt;/option&gt;
                &lt;/select&gt;
              &lt;/div&gt;
            &lt;/div&gt;

            &lt;div class="filter-group"&gt;
              &lt;label for="command-filter" data-i18n="command_filter_label"
                &gt;Comando&lt;/label
              &gt;
              &lt;div class="select-wrapper"&gt;
                &lt;select id="command-filter" class="select"&gt;
                  &lt;option value="all" data-i18n="command_all"&gt;Todos&lt;/option&gt;
                &lt;/select&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;

        &lt;aside class="next-routine" id="next-routine"&gt;
          &lt;h2 class="next-routine-title" data-i18n="next_routine_title"&gt;
            Pr√≥xima Rotina
          &lt;/h2&gt;

          &lt;div class="next-routine-info"&gt;
            &lt;i data-icon="clock"&gt;&lt;/i&gt;
            &lt;time id="next-routine-text"&gt;&lt;/time&gt;
          &lt;/div&gt;
        &lt;/aside&gt;

        &lt;!-- Categories Nav --&gt;
        &lt;nav class="categories-nav"&gt;
          &lt;div class="category-buttons" id="category-buttons"&gt;&lt;/div&gt;

          &lt;button
            id="add-category-btn"
            class="button button-outline add-category-btn"
          &gt;
            &lt;i data-icon="plus"&gt;&lt;/i&gt;
          &lt;/button&gt;
        &lt;/nav&gt;

        &lt;section class="routines-section"&gt;
          &lt;!-- Routines Grid --&gt;
          &lt;div class="routines-grid" id="routines-grid"&gt;&lt;/div&gt;

          &lt;div class="empty-state" id="empty-state"&gt;
            &lt;i data-icon="calendar"&gt;&lt;/i&gt;
            &lt;p class="empty-text"&gt;&lt;/p&gt;
            &lt;button class="button tech-button"&gt;
              &lt;i&gt;&lt;/i&gt;
              &lt;span&gt;&lt;/span&gt;
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/section&gt;
      &lt;/main&gt;

      &lt;button
        id="add-routine-btn"
        class="button tech-button routine-add-button"
      &gt;
        &lt;i data-icon="calendar-plus"&gt;&lt;/i&gt;
      &lt;/button&gt;
    &lt;/div&gt;

    &lt;!-- Category Modal --&gt;
    &lt;div id="category-modal" class="modal"&gt;
      &lt;div class="modal-overlay"&gt;&lt;/div&gt;
      &lt;div class="modal-content"&gt;
        &lt;header class="modal-header"&gt;
          &lt;h2
            class="modal-title text-gradient"
            data-i18n="category_modal_title"
          &gt;
            Gerenciar Categorias
          &lt;/h2&gt;

          &lt;p class="modal-description" data-i18n="category_modal_description"&gt;
            Organize suas rotinas com categorias personalizadas
          &lt;/p&gt;

          &lt;button type="button" id="categories-modal-close" class="modal-close"&gt;
            &lt;i data-icon="x"&gt;&lt;/i&gt;
          &lt;/button&gt;
        &lt;/header&gt;

        &lt;div class="modal-body"&gt;
          &lt;form id="category-form" class="form"&gt;
            &lt;div class="form-content"&gt;
              &lt;fieldset class="form-group"&gt;
                &lt;legend
                  for="category-name"
                  class="form-label"
                  data-i18n="category_form_label_name"
                &gt;
                  Nome da Categoria
                &lt;/legend&gt;
                &lt;input
                  id="category-name"
                  name="category-name"
                  type="text"
                  class="form-input"
                  data-i18n="category_form_placeholder_name"
                  placeholder="Ex: Trabalho, Sa√∫de, Estudos..."
                  maxlength="20"
                /&gt;
              &lt;/fieldset&gt;

              &lt;fieldset class="form-group"&gt;
                &lt;legend
                  class="form-label"
                  data-i18n="category_form_label_color"
                &gt;
                  Cor da Categoria
                &lt;/legend&gt;

                &lt;div class="color-picker" id="color-picker"&gt;&lt;/div&gt;

                &lt;input
                  type="hidden"
                  id="category-color"
                  name="category-color"
                  value="#8b5cf6"
                /&gt;
              &lt;/fieldset&gt;
            &lt;/div&gt;

            &lt;div class="modal-actions"&gt;
              &lt;button
                type="submit"
                class="button button-primary"
                id="save-category"
              &gt;
                &lt;i data-icon="plus"&gt;&lt;/i&gt;
                &lt;span data-i18n="category_add_button"&gt;Adicionar&lt;/span&gt;
              &lt;/button&gt;
            &lt;/div&gt;
          &lt;/form&gt;

          &lt;section class="categories-section"&gt;
            &lt;header class="categories-header"&gt;
              &lt;h3 class="text-gradient" data-i18n="my_categories"&gt;
                Minhas categorias
              &lt;/h3&gt;
              &lt;div class="categories-count badge" id="categories-count"&gt;0&lt;/div&gt;
            &lt;/header&gt;

            &lt;div class="categories-grid" id="categories-grid"&gt;&lt;/div&gt;
          &lt;/section&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- App Picker Modal --&gt;
    &lt;div id="app-picker-modal" class="modal"&gt;
      &lt;div class="modal-overlay"&gt;&lt;/div&gt;
      &lt;div class="modal-content"&gt;
        &lt;header class="modal-header"&gt;
          &lt;h2
            class="modal-title text-gradient"
            data-i18n="app_picker_modal_title"
          &gt;
            Selecionar Aplicativo
          &lt;/h2&gt;

          &lt;p class="modal-description" data-i18n="app_picker_modal_description"&gt;
            Escolha o aplicativo para o comando.
          &lt;/p&gt;

          &lt;button type="button" id="apps-modal-close" class="modal-close"&gt;
            &lt;i data-icon="x"&gt;&lt;/i&gt;
          &lt;/button&gt;
        &lt;/header&gt;

        &lt;div class="modal-body"&gt;
          &lt;div id="apps-grid" class="apps-grid"&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- Task Picker Modal --&gt;
    &lt;div id="task-picker-modal" class="modal"&gt;
      &lt;div class="modal-overlay"&gt;&lt;/div&gt;
      &lt;div class="modal-content"&gt;
        &lt;header class="modal-header"&gt;
          &lt;h2
            class="modal-title text-gradient"
            data-i18n="task_picker_modal_title"
          &gt;
            Selecionar Tarefa
          &lt;/h2&gt;

          &lt;p
            class="modal-description"
            data-i18n="task_picker_modal_description"
          &gt;
            Escolha a tarefa para o comando.
          &lt;/p&gt;

          &lt;button type="button" id="tasks-modal-close" class="modal-close"&gt;
            &lt;i data-icon="x"&gt;&lt;/i&gt;
          &lt;/button&gt;
        &lt;/header&gt;

        &lt;div class="modal-body"&gt;
          &lt;div class="search-wrapper"&gt;
            &lt;i data-icon="search"&gt;&lt;/i&gt;
            &lt;input
              type="search"
              id="task-search-input"
              placeholder="Buscar tarefas..."
              class="input-search"
              data-i18n="search_task_placeholder"
            /&gt;
          &lt;/div&gt;

          &lt;section class="tasks-section"&gt;
            &lt;header class="tasks-header"&gt;
              &lt;h3 class="text-gradient" data-i18n="my_tasks"&gt;Minhas tarefas&lt;/h3&gt;
              &lt;div class="tasks-count badge" id="tasks-count"&gt;0&lt;/div&gt;
            &lt;/header&gt;

            &lt;div id="tasks-grid" class="tasks-grid"&gt;&lt;/div&gt;
          &lt;/section&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- Routine Modal --&gt;
    &lt;div id="routine-modal" class="modal"&gt;
      &lt;div class="modal-overlay"&gt;&lt;/div&gt;
      &lt;div class="modal-content"&gt;
        &lt;header class="modal-header"&gt;
          &lt;h2 class="modal-title text-gradient"&gt;Nova Rotina&lt;/h2&gt;

          &lt;p class="modal-description"&gt;
            Crie uma nova rotina para seu dia a dia.
          &lt;/p&gt;
        &lt;/header&gt;

        &lt;div class="modal-body"&gt;
          &lt;form id="routine-form" class="form"&gt;
            &lt;div class="form-content"&gt;
              &lt;div class="form-group"&gt;
                &lt;label
                  for="title"
                  class="form-label"
                  data-i18n="form_label_name"
                  &gt;T√≠tulo&lt;/label
                &gt;
                &lt;input
                  id="title"
                  name="title"
                  type="text"
                  class="form-input"
                  placeholder="Ex: Exerc√≠cios matinais"
                  data-i18n="form_placeholder_title"
                /&gt;
                &lt;div class="form-error" id="title-error"&gt;&lt;/div&gt;
              &lt;/div&gt;

              &lt;div class="form-group"&gt;
                &lt;label
                  for="description"
                  class="form-label"
                  data-i18n="form_label_description"
                  &gt;Descri√ß√£o&lt;/label
                &gt;
                &lt;textarea
                  id="description"
                  name="description"
                  class="form-textarea"
                  placeholder="Ex: 30 minutos de exerc√≠cios para come√ßar o dia com energia"
                  data-i18n="form_placeholder_description"
                &gt;&lt;/textarea&gt;
                &lt;div class="form-error" id="description-error"&gt;&lt;/div&gt;
              &lt;/div&gt;

              &lt;div class="form-group"&gt;
                &lt;div id="command-dropdown" class="command-dropdown"&gt;&lt;/div&gt;

                &lt;label
                  for="command"
                  class="form-label"
                  data-i18n="form_label_command"
                  &gt;Comando (opcional)&lt;/label
                &gt;
                &lt;input
                  id="command"
                  name="command"
                  type="text"
                  class="form-input"
                  placeholder="Digite / para ver comandos dispon√≠veis"
                  data-i18n="form_placeholder_command"
                /&gt;
                &lt;div class="form-error" id="command-error"&gt;&lt;/div&gt;
              &lt;/div&gt;

              &lt;div class="form-group"&gt;
                &lt;label
                  for="category-select"
                  class="form-label"
                  data-i18n="form_label_category"
                  &gt;Categoria&lt;/label
                &gt;
                &lt;select
                  id="category-select"
                  name="category"
                  class="form-select"
                &gt;&lt;/select&gt;
              &lt;/div&gt;

              &lt;div class="form-group"&gt;
                &lt;label
                  for="priority"
                  class="form-label"
                  data-i18n="form_label_priority"
                  &gt;Prioridade&lt;/label
                &gt;
                &lt;select id="priority" name="priority" class="form-select"&gt;
                  &lt;option value="low" data-i18n="priority_low"&gt;Baixa&lt;/option&gt;
                  &lt;option value="medium" selected data-i18n="priority_medium"&gt;
                    M√©dia
                  &lt;/option&gt;
                  &lt;option value="high" data-i18n="priority_high"&gt;Alta&lt;/option&gt;
                &lt;/select&gt;
                &lt;div class="form-error" id="priority-error"&gt;&lt;/div&gt;
              &lt;/div&gt;

              &lt;div class="form-group"&gt;
                &lt;label for="time" class="form-label" data-i18n="form_label_time"
                  &gt;Hor√°rio&lt;/label
                &gt;
                &lt;input id="time" name="time" type="time" class="form-input" /&gt;
                &lt;div class="form-error" id="time-error"&gt;&lt;/div&gt;
              &lt;/div&gt;

              &lt;div class="form-group"&gt;
                &lt;label class="form-label" data-i18n="form_label_days"
                  &gt;Dias da semana&lt;/label
                &gt;
                &lt;div class="days-container" id="days-container"&gt;
                  &lt;button
                    type="button"
                    class="day-button"
                    data-day="0"
                    data-i18n="day_sun"
                  &gt;
                    Dom
                  &lt;/button&gt;
                  &lt;button
                    type="button"
                    class="day-button"
                    data-day="1"
                    data-i18n="day_mon"
                  &gt;
                    Seg
                  &lt;/button&gt;
                  &lt;button
                    type="button"
                    class="day-button"
                    data-day="2"
                    data-i18n="day_tue"
                  &gt;
                    Ter
                  &lt;/button&gt;
                  &lt;button
                    type="button"
                    class="day-button"
                    data-day="3"
                    data-i18n="day_wed"
                  &gt;
                    Qua
                  &lt;/button&gt;
                  &lt;button
                    type="button"
                    class="day-button"
                    data-day="4"
                    data-i18n="day_thu"
                  &gt;
                    Qui
                  &lt;/button&gt;
                  &lt;button
                    type="button"
                    class="day-button"
                    data-day="5"
                    data-i18n="day_fri"
                  &gt;
                    Sex
                  &lt;/button&gt;
                  &lt;button
                    type="button"
                    class="day-button"
                    data-day="6"
                    data-i18n="day_sat"
                  &gt;
                    S√°b
                  &lt;/button&gt;
                &lt;/div&gt;
                &lt;div class="form-error" id="days-error"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;

            &lt;footer class="modal-actions"&gt;
              &lt;button
                type="button"
                id="cancel-routine"
                class="button button-outline"
              &gt;
                &lt;i data-icon="x"&gt;&lt;/i&gt;
                &lt;span data-i18n="cancel_button"&gt;Cancelar&lt;/span&gt;
              &lt;/button&gt;

              &lt;button
                type="submit"
                id="create-routine-btn"
                class="button button-primary"
              &gt;
                Criar
              &lt;/button&gt;
            &lt;/footer&gt;
          &lt;/form&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- Delete Modal --&gt;
    &lt;div id="delete-routine-modal" class="modal"&gt;
      &lt;div class="modal-overlay"&gt;&lt;/div&gt;
      &lt;div class="modal-content"&gt;
        &lt;header class="modal-header"&gt;
          &lt;h2 class="modal-title text-gradient" data-i18n="delete_modal_title"&gt;
            Excluir Rotina
          &lt;/h2&gt;

          &lt;p class="modal-description" data-i18n="delete_modal_description"&gt;
            Tem certeza que deseja excluir esta rotina? Esta a√ß√£o n√£o pode ser
            desfeita.
          &lt;/p&gt;
        &lt;/header&gt;

        &lt;footer class="modal-actions"&gt;
          &lt;button
            type="button"
            class="button button-outline"
            id="cancel-delete"
          &gt;
            &lt;i data-icon="x"&gt;&lt;/i&gt;
            &lt;span data-i18n="cancel_button"&gt;Cancelar&lt;/span&gt;
          &lt;/button&gt;
          &lt;button type="button" class="button delete-btn" id="confirm-delete"&gt;
            &lt;i data-icon="trash2"&gt;&lt;/i&gt;
            &lt;span data-i18n="delete_button"&gt;Excluir&lt;/span&gt;
          &lt;/button&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- Settings Modal --&gt;
    &lt;div id="settings-modal" class="modal"&gt;
      &lt;div class="modal-overlay"&gt;&lt;/div&gt;
      &lt;div class="modal-content"&gt;
        &lt;header class="modal-header"&gt;
          &lt;h2
            class="modal-title text-gradient"
            data-i18n="settings_modal_title"
          &gt;
            An√∫ncio de Rotinas
          &lt;/h2&gt;

          &lt;p class="modal-description" data-i18n="settings_modal_description"&gt;
            Configure como ser notificado quando uma rotina executar.
          &lt;/p&gt;

          &lt;button type="button" id="settings-modal-close" class="modal-close"&gt;
            &lt;i data-icon="x"&gt;&lt;/i&gt;
          &lt;/button&gt;
        &lt;/header&gt;

        &lt;div class="modal-body"&gt;
          &lt;div class="settings-list"&gt;
            &lt;div class="setting-item"&gt;
              &lt;label for="voice-toggle" data-i18n="setting_voice_label"
                &gt;Anunciar com voz do google&lt;/label
              &gt;
              &lt;input type="checkbox" id="voice-toggle" /&gt;
            &lt;/div&gt;

            &lt;div class="setting-item"&gt;
              &lt;label for="toast-toggle" data-i18n="setting_toast_label"
                &gt;Exibir toast na tela&lt;/label
              &gt;
              &lt;input type="checkbox" id="toast-toggle" /&gt;
            &lt;/div&gt;

            &lt;div class="setting-item"&gt;
              &lt;label for="vibrate-toggle" data-i18n="setting_vibrate_label"
                &gt;Vibrar dispositivo&lt;/label
              &gt;
              &lt;input type="checkbox" id="vibrate-toggle" /&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- Toast --&gt;
    &lt;div class="toast-container" id="toast-container"&gt;&lt;/div&gt;

    &lt;script&gt;
      const TaskerEnvironment = (() =&gt; {
        const NAME = "tasker";
        const LANG_CODE = local("sys_lang_code") || "en";
        const WORK_DIR = "%project_path";
        const ICON_PATH =
          "content://net.dinglisch.android.taskerm.iconprovider//app/";

        function loadLang(code) {
          const storedLanguage = shell(
            `cat "${WORK_DIR}/src/locales/${code}.json" 2&gt;/dev/null`
          );
          if (!storedLanguage) throw new Error("");
          return JSON.parse(storedLanguage);
        }

        function loadApps() {
          performTask("RF 06 - ACTIONS HANDLER", %priority+1, "load_apps");
          return [];
        }

        function loadTasks() {
          performTask("RF 06 - ACTIONS HANDLER", %priority+1, "load_tasks");
          return [];
        }

        function getCategories() {
          const data = local("category_data");
          const isValid = !data.match(/^.[a-z_]+/);
          return isValid ? data : null;
        }

        function saveCategories(data) {
          performTask("RF 06 - ACTIONS HANDLER", %priority+1, "update_categories", data);
        }

        function getRoutines() {
          const data = local("routine_data");
          const isValid = !data.match(/^.[a-z_]+/);
          return isValid ? data : null;
        }

        function saveRoutines(data) {
          performTask("RF 06 - ACTIONS HANDLER", %priority+1, "update_routines", data);
        }

        function getSettings() {
          return global("RF_SETTINGS");
        }

        function saveSettings(settings) {
          setGlobal("RF_SETTINGS", settings);
        }

        return {
          name: NAME,
          langCode: LANG_CODE,
          workDir: WORK_DIR,
          iconPath: ICON_PATH,
          loadLang,
          loadApps,
          loadTasks,
          getCategories,
          saveCategories,
          getRoutines,
          saveRoutines,
          getSettings,
          saveSettings,
          exit
        };
      })();
    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;</Str>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="1"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
			<LinkClickFilter sr="filter0">
				<stopEvent>true</stopEvent>
			</LinkClickFilter>
		</WebElement>
		<PropertiesElement sr="props">
			<keyTask>388</keyTask>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#00FFFFFF</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">RF - ROUTINE MAMAGER</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
			<LinkClickFilter sr="filter0">
				<stopEvent>true</stopEvent>
				<urlMatch>back</urlMatch>
			</LinkClickFilter>
		</PropertiesElement>
	</Scene>
	<Scene sr="sceneRF 02 - MATRIX LOADER">
		<cdate>1755704584025</cdate>
		<edate>1756935548017</edate>
		<heightLand>1080</heightLand>
		<heightPort>2400</heightPort>
		<nme>RF 02 - MATRIX LOADER</nme>
		<widthLand>2307</widthLand>
		<widthPort>1080</widthPort>
		<WebElement sr="elements0" ve="2">
			<flags>6</flags>
			<geom>0,0,1080,2400,-1,-1,-1,-1</geom>
			<linkclickTask>387</linkclickTask>
			<Str sr="arg0" ve="3">MATRIX LOADER</Str>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">&lt;!doctype html&gt;
&lt;html lang="pt-BR"&gt;
  &lt;head&gt;
    &lt;meta charset="UTF-8" /&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&gt;
    &lt;style&gt;
      @import url("https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&amp;display=swap");

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      html {
        font-size: 62.5%;
      }

      html,
      body {
        height: 100%;
        width: 100vw;
        font-family: "Orbitron", monospace;
      }

      .loader-container {
        display: flex;
        position: relative;
        justify-content: center;
        align-items: center;
        height: 100vh;
        width: 100%;
        background: radial-gradient(circle at center, #001122 0%, #000000 70%);
        overflow: hidden;
      }

      .loader-content {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 4rem;
        border-radius: 1.5rem;
        width: 70%;
        background: rgba(10, 25, 40, 0.1);
        backdrop-filter: blur(1rem);
        border: 0.1rem solid rgba(255, 255, 255, 0.03);
        padding: 3rem;
        z-index: 10;
        position: relative;
      }

      .loader-content h2 {
        color: #00ff66;
        font-size: 2rem;
        font-weight: 700;
        text-align: center;
        text-shadow:
          0 0 1rem rgba(0, 255, 100, 0.5),
          0 0 2rem rgba(0, 255, 100, 0.3),
          0 0 3rem rgba(0, 255, 100, 0.1);
        letter-spacing: 0.1rem;
        position: relative;
      }

      .loader-content h2 span {
        display: block;
        font-size: 0.6em;
        color: #66ffaa;
        font-weight: 400;
        margin-top: 0.5rem;
        opacity: 0.8;
        animation: pulse 2s ease-in-out infinite;
      }

      .progress-bar {
        position: relative;
        background: rgba(0, 20, 40, 0.1);
        width: 85%;
        height: 1.5rem;
        border-radius: 5rem;
        overflow: hidden;
        border: 0.1rem solid rgba(0, 255, 100, 0.3);
        box-shadow:
          inset 0 0.2rem 0.4rem rgba(0, 0, 0, 0.3),
          0 0 2rem rgba(0, 255, 100, 0.1);
      }

      .progress-bar::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 0;
        height: 100%;
        background: linear-gradient(
          90deg,
          #00ff66 0%,
          #00cc99 50%,
          #0099cc 100%
        );
        border-radius: inherit;
        box-shadow:
          0 0 2rem rgba(0, 255, 100, 0.6),
          inset 0 0.1rem 0 rgba(255, 255, 255, 0.3);
        animation: progress 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
      }

      .progress-bar::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
          90deg,
          transparent 0%,
          rgba(255, 255, 255, 0.1) 50%,
          transparent 100%
        );
        animation: scan 2s linear infinite;
      }

      .continue-btn {
        display: none;
        font-size: 1.2rem;
        color: #000;
        padding: 1.2rem;
        background: linear-gradient(145deg, #00ff66, #00cc99);
        border-radius: 5rem;
        font-weight: 700;
        cursor: pointer;
        border: none;
        box-shadow:
          0 0.8rem 1.6rem rgba(0, 255, 100, 0.3),
          0 0 3rem rgba(0, 255, 100, 0.2),
          inset 0 0.1rem 0 rgba(255, 255, 255, 0.3);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        text-transform: uppercase;
        letter-spacing: 0.1rem;
        position: relative;
        overflow: hidden;
      }

      .continue-btn:hover {
        transform: translateY(-0.2rem);
        box-shadow:
          0 1.2rem 2.4rem rgba(0, 255, 100, 0.4),
          0 0 4rem rgba(0, 255, 100, 0.3);
      }

      .continue-btn.active {
        display: block;
        animation: fadeInUp 0.8s cubic-bezier(0.4, 0, 0.2, 1);
      }

      .matrix-text {
        position: absolute;
        top: -20rem;
        text-align: center;
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        animation: rain linear infinite;
        white-space: pre-line;
        line-height: 0.8;
        font-family: "Courier New", monospace;
        font-weight: bold;
        filter: blur(0.05rem);
        text-shadow: 0 0 1rem currentColor;
      }

      @keyframes progress {
        0% {
          width: 0;
        }
        50% {
          width: 70%;
        }
        100% {
          width: 100%;
        }
      }

      @keyframes pulse {
        0%,
        100% {
          opacity: 0.6;
        }
        50% {
          opacity: 1;
        }
      }

      @keyframes rain {
        to {
          transform: translateY(calc(100vh + 20rem));
          opacity: 0;
        }
      }

      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(3rem);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes scan {
        0% {
          transform: translateX(-100%);
        }
        100% {
          transform: translateX(400%);
        }
      }
    &lt;/style&gt;
    &lt;title&gt;Loading&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;section class="loader-container"&gt;
      &lt;div class="loader-content"&gt;
        &lt;h2 data-title&gt;Creating Files &lt;span&gt;await...&lt;/span&gt;&lt;/h2&gt;
        &lt;div data-progress class="progress-bar"&gt;&lt;/div&gt;
        &lt;p data-continue class="continue-btn"&gt;Continue&lt;/p&gt;
      &lt;/div&gt;
    &lt;/section&gt;

    &lt;script&gt;
      const MatrixLoader = (() =&gt; {
        const TOTAL_ELEMENTS = 200;
        const WORDS = ["ROUTINEFLOW", "X-MRROBOT-X"];
        let currentWordIndex = 0;

        const elements = {
          container: document.querySelector(".loader-container"),
          title: document.querySelector("[data-title]"),
          progress: document.querySelector("[data-progress]"),
          continueBtn: document.querySelector("[data-continue]")
        };

        function createMatrixText() {
          const p = document.createElement("p");
          const size = random(20, 46);

          const selectedWord = WORDS[currentWordIndex];
          currentWordIndex = (currentWordIndex + 1) % WORDS.length;

          p.className = "matrix-text";
          p.style.fontSize = `${size / 10}vw`;
          p.style.left = `${random(0, innerWidth)}px`;
          p.style.backgroundImage =
            size &lt; 35
              ? "linear-gradient(to top, #00cf00, #000f00)"
              : "linear-gradient(to top, #20ff20, #000f00)";
          p.style.animationDelay = `${Math.random() * -20}s`;
          p.style.animationDuration = `${Math.random() * 7}s`;
          p.textContent = selectedWord.split("").join("\n");

          return p;
        }

        function complete() {
          elements.title.textContent = "Files created";
          elements.progress.remove();
          elements.continueBtn.classList.add("active");
        }

        function random(min, max) {
          return Math.floor(Math.random() * (max - min) + min);
        }

        function bindEvents() {
          elements.continueBtn.onclick = () =&gt;
            (window.location.href = "continue");
        }

        function render() {
          const fragment = document.createDocumentFragment();
          for (let i = 0; i &lt; TOTAL_ELEMENTS; i++) {
            fragment.appendChild(createMatrixText());
          }
          elements.container.appendChild(fragment);
        }

        function init() {
          render();
          bindEvents();
        }

        return { init, complete };
      })();

      MatrixLoader.init();
    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;</Str>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Str sr="arg8" ve="3"/>
			<LinkClickFilter sr="filter0">
				<stopEvent>true</stopEvent>
			</LinkClickFilter>
		</WebElement>
		<PropertiesElement sr="props">
			<keyTask>384</keyTask>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#00FFFFFF</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">RF 02 - MATRIX LOADER</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
			<LinkClickFilter sr="filter0">
				<stopEvent>true</stopEvent>
				<urlMatch>back</urlMatch>
			</LinkClickFilter>
		</PropertiesElement>
	</Scene>
	<Task sr="task384">
		<cdate>1755704601605</cdate>
		<edate>1755704601605</edate>
		<id>384</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">RF 02 - MATRIX LOADER</Str>
		</Action>
	</Task>
	<Task sr="task385">
		<cdate>1755369441355</cdate>
		<edate>1756943024031</edate>
		<id>385</id>
		<nme>RF 11 - STOP ROUTINE NOTIFIER</nme>
		<pri>100</pri>
		<rty>1</rty>
		<Action sr="act0" ve="7">
			<code>137</code>
			<Int sr="arg0" val="1"/>
			<Str sr="arg1" ve="3">RF 02 - ROUTINE EXECUTOR</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>137</code>
			<Int sr="arg0" val="1"/>
			<Str sr="arg1" ve="3">RF 03 - ROUTINE NOTIFIER</Str>
		</Action>
		<Action sr="act2" ve="7">
			<code>62</code>
			<Str sr="arg0" ve="3">0,1000</Str>
			<Str sr="arg1" ve="3"/>
		</Action>
	</Task>
	<Task sr="task386">
		<cdate>1756932340337</cdate>
		<edate>1756942995899</edate>
		<id>386</id>
		<nme>RF 02 - ROUTINE EXECUTOR</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>2</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>130</code>
			<label>Get Routine Data</label>
			<Str sr="arg0" ve="3">RF 08 - ROUTINE DATA MANAGER</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">get_routine_data</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">%routine_data</Str>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%next_routine_index</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act3" ve="7">
			<code>389</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""/&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">%routine_title
%routine_command</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3">%routine_data[title](%next_routine_index)
%routine_data[command](%next_routine_index)</Str>
			<Str sr="arg4" ve="3">
</Str>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">RF 03 - ROUTINE NOTIFIER</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%routine_title</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">RF 04 - COMMAND EXECUTOR</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%routine_command</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act7" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">RF 05 - SCHEDULE NEXT ROUTINE</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="0"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="1"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task387">
		<cdate>1755705635405</cdate>
		<edate>1755705635405</edate>
		<id>387</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%url</lhs>
					<op>2</op>
					<rhs>*continue</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">RF 02 - MATRIX LOADER</Str>
		</Action>
		<Action sr="act2" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">RF 01 - SHOW ROUTINE MANAGER</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="1"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>38</code>
		</Action>
	</Task>
	<Task sr="task388">
		<cdate>1747394252313</cdate>
		<edate>1747394252313</edate>
		<id>388</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>53</code>
			<Str sr="arg0" ve="3">RF 01 - ROUTINE MANAGER UI</Str>
			<Str sr="arg1" ve="3">ROUTINE FLOW</Str>
			<Int sr="arg2" val="6"/>
			<Str sr="arg3" ve="3">javascript:(() =&gt; {
  var k = "%TIMES";
  if (!App.goBack()) {
    tk.destroyScene("RF 01 - ROUTINE MANAGER UI");
  }
})();</Str>
		</Action>
	</Task>
	<Task sr="task389">
		<cdate>1754008635772</cdate>
		<edate>1756942983946</edate>
		<id>389</id>
		<nme>RF 03 - ROUTINE NOTIFIER</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>2</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>62</code>
			<Str sr="arg0" ve="3">0,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000</Str>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%RF_SETTINGS[vibrate]</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act2" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">%routine_title</Str>
			<Int sr="arg1" val="1"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3">1</Str>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3">1</Str>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">android.resource://net.dinglisch.android.taskerm/drawable/mw_calendar</Str>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#cc5768ef</Str>
			<Str sr="arg7" ve="3">RF 11 - STOP ROUTINE NOTIFIER</Str>
			<Str sr="arg8" ve="3">60000</Str>
			<Int sr="arg9" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%RF_SETTINGS[toast]</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act3" ve="7">
			<code>559</code>
			<Str sr="arg0" ve="3">%routine_title</Str>
			<Str sr="arg1" ve="3">default:default</Str>
			<Int sr="arg2" val="3"/>
			<Int sr="arg3" val="5"/>
			<Int sr="arg4" val="6"/>
			<Int sr="arg5" val="1"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%RF_SETTINGS[voice]</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
	</Task>
	<Task sr="task391">
		<cdate>1747394175810</cdate>
		<edate>1756935564413</edate>
		<id>391</id>
		<nme>RF 01 - SHOW ROUTINE MANAGER</nme>
		<pri>100</pri>
		<rty>1</rty>
		<Action sr="act0" ve="7">
			<code>235</code>
			<label>Check system language - Suported (pt, en, es)</label>
			<se>false</se>
			<Int sr="arg0" val="2"/>
			<Str sr="arg1" ve="3">system_locales</Str>
			<Str sr="arg2" ve="3"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">%sys_lang_code</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">RF 10 - VERIFY / CREATE CODE FILES</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="0"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>130</code>
			<label>Get Category Data</label>
			<Str sr="arg0" ve="3">RF 07 - CATEGORY DATA MANAGER</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">get_category_data</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">%category_data</Str>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>130</code>
			<label>Get Routine Data</label>
			<Str sr="arg0" ve="3">RF 08 - ROUTINE DATA MANAGER</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">get_routine_data</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">%routine_data</Str>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">RF 01 - ROUTINE MANAGER UI</Str>
		</Action>
		<Action sr="act5" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">RF 01 - ROUTINE MANAGER UI</Str>
			<Int sr="arg1" val="10"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Img sr="icn" ve="2">
			<nme>mw_notification_event_note</nme>
			<tint>-1</tint>
		</Img>
	</Task>
	<Task sr="task395">
		<cdate>1747394723037</cdate>
		<edate>1756943014812</edate>
		<id>395</id>
		<nme>RF 12 - CLEAR DATA</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">RF 07 - CATEGORY DATA MANAGER</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">save_category_data</Str>
			<Str sr="arg3" ve="3">[
  {
    "id": "general",
    "name": "category_general",
    "color": "#3b82f6"
  }
]</Str>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">RF 08 - ROUTINE DATA MANAGER</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">save_routine_data</Str>
			<Str sr="arg3" ve="3">[]</Str>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>123</code>
			<se>false</se>
			<Str sr="arg0" ve="3">rm -rf "%project_path/src"</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">RF 05 - SCHEDULE NEXT ROUTINE</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">Cleaned Data</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3">1</Str>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3">1</Str>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">android.resource://net.dinglisch.android.taskerm/drawable/mw_communication_clear_all</Str>
			<Str sr="arg5" ve="3">9</Str>
			<Str sr="arg6" ve="3">#cc5768ef</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">3000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Img sr="icn" ve="2">
			<nme>mw_action_delete</nme>
			<tint>-1</tint>
		</Img>
	</Task>
	<Task sr="task397">
		<cdate>1751000000007</cdate>
		<edate>1756942977670</edate>
		<id>397</id>
		<nme>RF 05 - SCHEDULE NEXT ROUTINE</nme>
		<pri>100</pri>
		<rty>1</rty>
		<Action sr="act0" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>2</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">RF 08 - ROUTINE DATA MANAGER</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">get_routine_data</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">%routine_data</Str>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">RF - ROUTINE EXECUTION TIMER</Str>
			<Int sr="arg1" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%next_routine*</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">function findNextActivation(routines) {
  const now = new Date();
  const currentDay = now.getDay();
  const currentTime = now.getHours() * 3600 + now.getMinutes() * 60 + now.getSeconds();

  if (!routines?.length) return null;

  const activeRoutines = routines.filter(r =&gt; r?.active);
  if (!activeRoutines.length) return null;
  
  let nextActivation = null;
  let nextTime = Infinity;
  
  for (let day = 0; day &lt;= 7; day++) {
    const targetDay = (currentDay + day) % 7;
    const dayRoutines = activeRoutines
      .filter(r =&gt; r.frequency?.includes(targetDay))
      .sort((a, b) =&gt; a.time - b.time);
    
    for (const routine of dayRoutines) {
      if (day === 0 &amp;&amp; routine.time &lt;= currentTime) continue;
      
      const activationDate = new Date(now);
      activationDate.setDate(now.getDate() + day);
      
      const hours = Math.floor(routine.time / 3600);
      const minutes = Math.floor((routine.time % 3600) / 60);
      const seconds = routine.time % 60;
      
      activationDate.setHours(hours, minutes, seconds, 0);
      
      const timestamp = Math.floor(activationDate.getTime() / 1000);
      
      if (timestamp &lt; nextTime) {
        nextActivation = routine;
        nextTime = timestamp;
      }
    }
    
    if (nextActivation &amp;&amp; day === 0) break;
  }
  
  if (nextActivation) {
    next_routine_time = nextTime;
    next_routine_index = routines.findIndex(r =&gt; r.id == nextActivation.id) + 1;
    return nextActivation;
  }
  
  return null;
}

const routineData = local("routine_data") || "[]";
const routines = JSON.parse(routineData);

findNextActivation(routines);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">RF - ROUTINE EXECUTION TIMER</Str>
			<Int sr="arg1" val="1"/>
		</Action>
	</Task>
	<Task sr="task406">
		<cdate>1747360746028</cdate>
		<edate>1756933271438</edate>
		<id>406</id>
		<nme>RF 07 - CATEGORY DATA MANAGER</nme>
		<pri>100</pri>
		<rty>1</rty>
		<Action sr="act0" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>2</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>389</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""/&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">%categories_path=%project_path/categories.json
%action=%par1
%category_data=%par2</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">=</Str>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>410</code>
			<Str sr="arg0" ve="3">%categories_path</Str>
			<Str sr="arg1" ve="3">%category_data</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act2" ve="7">
			<code>409</code>
			<Str sr="arg0" ve="3">%project_path</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="1"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%action</lhs>
					<op>2</op>
					<rhs>get_category_data</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act4" ve="7">
			<code>342</code>
			<Int sr="arg0" val="5"/>
			<Str sr="arg1" ve="3">%categories_path</Str>
			<Str sr="arg2" ve="3">%file_exists</Str>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="1"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%file_exists</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act6" ve="7">
			<code>417</code>
			<Str sr="arg0" ve="3">%categories_path</Str>
			<Str sr="arg1" ve="3">%category_data</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act8" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%category_data</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%action</lhs>
					<op>2</op>
					<rhs>save_category_data</rhs>
				</Condition>
			</ConditionList>
		</Action>
	</Task>
	<Task sr="task408">
		<cdate>1754408319217</cdate>
		<edate>1757342216748</edate>
		<id>408</id>
		<nme>RF 10 - VERIFY / CREATE CODE FILES</nme>
		<pri>100</pri>
		<rty>1</rty>
		<Action sr="act0" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>2</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%version_path</Str>
			<Str sr="arg1" ve="3">%project_path/version</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>123</code>
			<se>false</se>
			<Str sr="arg0" ve="3">mkdir -p "%project_path" &amp;&amp; rm -rf "%project_path/src"</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%total_files</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>37</code>
			<coll>true</coll>
			<label>Create css files</label>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>css</lhs>
					<op>2</op>
					<rhs>css</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act12" ve="7">
			<code>410</code>
			<label>variables.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/variables.css</Str>
			<Str sr="arg1" ve="3">:root {
  --text-primary: #f8fafc;
  --text-secondary: #c3cad6;
  --text-muted: #8d96a7;

  --bg-primary: #0e141b;
  --bg-secondary: #141c24;
  --bg-button-hover: #181f29;

  --border: #1e2736;
  --input: #1e2736;
  --ring: #38bdf8;

  --danger-light: #fca5a5;
  --danger-medium: #f87171;
  --danger-dark: #b91c1c;
  --warning-light: #fde047;
  --success-light: #86efac;
  --success-medium: #4ade80;

  --bg-primary-rgb: 14, 20, 27;
  --bg-secondary-rgb: 20, 28, 36;
  --gradient-start-rgb: 56, 189, 248;
  --gradient-end-rgb: 16, 185, 129;
  --danger-medium-rgb: 239, 68, 68;
  --danger-dark-rgb: 220, 38, 38;
  --warning-medium-rgb: 234, 179, 8;
  --success-medium-rgb: 34, 197, 94;
  --success-dark-rgb: 34, 197, 94;
  --black-rgb: 0, 0, 0;

  --icon-xs: 1.2rem;
  --icon-sm: 1.4rem;
  --icon-md: 1.6rem;
  --icon-lg: 2rem;
  --icon-xl: 2.4rem;
  --icon-2xl: 3.2rem;

  --radius-sm: 0.8rem;
  --radius-md: 1.2rem;
  --radius-lg: 1.4rem;
  --radius-full: 9999px;

  --space-xxs: 0.4rem;
  --space-xs: 0.8rem;
  --space-sm: 1.2rem;
  --space-md: 1.6rem;
  --space-lg: 2.4rem;
  --space-xl: 3.2rem;
  --space-xxl: 4.8rem;

  --font-xxs: 1rem;
  --font-xs: 1.2rem;
  --font-sm: 1.4rem;
  --font-md: 1.6rem;
  --font-lg: 1.8rem;
  --font-xl: 2rem;
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>410</code>
			<label>reset.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/reset.css</Str>
			<Str sr="arg1" ve="3">* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  user-select: none;
}

*::-webkit-scrollbar {
  display: none;
}

button,
input,
select,
textarea {
  font-family: inherit;
  border: none;
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>410</code>
			<label>shared.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/shared.css</Str>
			<Str sr="arg1" ve="3">input:focus,
textarea:focus,
select:focus,
.search-wrapper:focus-within {
  outline: none;
  border-color: var(--ring);
  box-shadow: 0 0 0 0.2rem rgba(var(--gradient-start-rgb), 0.3);
}

input::placeholder,
textarea::placeholder {
  color: var(--text-muted);
}

svg {
  display: flex;
  align-items: center;
  justify-content: center;
}

.text-gradient {
  background: linear-gradient(
    to right,
    rgb(var(--gradient-start-rgb)),
    rgb(var(--gradient-end-rgb))
  );
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 1rem;
  border: 1px solid rgba(var(--gradient-start-rgb), 0.3);
  min-width: 1.8rem;
  min-height: 1.8rem;
  color: rgba(var(--gradient-start-rgb), 1);
  font-weight: 600;
  padding: 0.4rem;
  border-radius: var(--radius-full);
  aspect-ratio: 1 / 1;
  background: rgba(var(--gradient-start-rgb), 0.3);
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act15" ve="7">
			<code>410</code>
			<label>base.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/base.css</Str>
			<Str sr="arg1" ve="3">body,
html,
.app-container {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

html {
  font-size: 62.5%;
}

body {
  font-size: 1.6rem;
  font-family: "Inter", sans-serif;
  color: var(--text-primary);
  line-height: 1.5;
}

body.loading {
  visibility: hidden;
}

.app-container {
  background-color: var(--bg-primary);
  overflow-y: auto;
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>410</code>
			<label>button.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/button.css</Str>
			<Str sr="arg1" ve="3">.button {
  display: flex;
  font-weight: 500;
  padding: var(--space-xs);
  border-radius: var(--radius-sm);
  transition: all 0.2s;
}

.button svg {
  width: 1.6rem;
  height: 1.6rem;
}

.tech-button {
  color: var(--text-primary);
  background: linear-gradient(
    135deg,
    rgb(var(--gradient-start-rgb)),
    rgb(var(--gradient-end-rgb))
  );
  box-shadow: 0 0.4rem 1.2rem rgba(var(--gradient-end-rgb), 0.3);
  transition:
    transform 0.2s,
    box-shadow 0.2s;
}

.tech-button:active {
  box-shadow:
    0 0.6rem 1.6rem rgba(var(--gradient-end-rgb), 0.4),
    0 0 0 0.2rem rgba(var(--gradient-start-rgb), 0.2);
}

.delete-btn {
  color: var(--danger-medium);
  background-color: rgba(var(--danger-dark-rgb), 0.2);
}

.delete-btn:active {
  background-color: rgba(var(--danger-dark-rgb), 0.3);
}

.routine-add-button {
  position: fixed;
  right: var(--space-lg);
  bottom: var(--space-lg);
  display: flex;
  align-items: center;
  justify-content: center;
  width: 5.6rem;
  height: 5.6rem;
  border-radius: var(--radius-full);
  z-index: 40;
}

.routine-add-button:active {
  transform: scale(1.1);
}

.routine-add-button svg {
  width: 2.4rem;
  height: 2.4rem;
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act17" ve="7">
			<code>410</code>
			<label>header.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/header.css</Str>
			<Str sr="arg1" ve="3">.header {
  position: sticky;
  top: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid var(--border);
  padding: var(--space-md) var(--space-lg);
  background: rgba(var(--bg-primary-rgb), 0.5);
  backdrop-filter: blur(5px);
  z-index: 100;
}

.header-title {
  display: flex;
  justify-content: center;
  align-items: center;
}

.logo-icon {
  width: var(--icon-xl);
  height: var(--icon-xl);
  color: rgb(var(--gradient-start-rgb));
  margin-right: var(--space-xs);
}

.logo-text {
  font-weight: 700;
  font-size: var(--font-xl);
}

.settings-button {
  background-color: transparent;
}

.settings-button svg {
  color: rgb(var(--gradient-start-rgb));
  width: var(--icon-xl);
  height: var(--icon-xl);
  transition: color 0.3s ease;
}

.settings-button:active svg {
  color: var(--text-secondary);
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act18" ve="7">
			<code>410</code>
			<label>filters.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/filters.css</Str>
			<Str sr="arg1" ve="3">.filters-bar {
  padding: var(--space-md);
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  backdrop-filter: blur(0.4rem);
  background-color: var(--bg-secondary);
}

.filters-header {
  display: flex;
  align-items: center;
  gap: var(--space-md);
  margin-bottom: var(--space-sm);
}

.toggle-filters-btn {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: var(--text-secondary);
  background: transparent;
  transition: color 0.3s;
}

.toggle-filters-btn:active {
  color: var(--text-primary);
}

.toggle-filters-btn svg {
  width: 1.8rem;
  height: 1.8rem;
}

.filter-chevron {
  width: 1.6rem;
  height: 1.6rem;
  transition: transform 0.3s;
}

.filters-bar.extended .filter-chevron {
  transform: rotate(180deg);
}

/* Search */

.search-wrapper {
  display: flex;
  align-items: center;
  padding: var(--space-sm);
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  background-color: rgba(var(--bg-primary-rgb), 0.6);
  transition: border 0.3s ease;
}

.search-wrapper svg {
  width: 1.8rem;
  height: 1.8rem;
  color: var(--text-secondary);
}

.input-search {
  flex: 1;
  color: var(--text-primary);
  margin-left: var(--space-xs);
  background: transparent;
  transition: border-color 0.3s;
}

.input-search:focus {
  border: none;
  box-shadow: none;
}

/* Advanced filters */

.advanced-filters {
  display: none;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-sm);
  margin-top: var(--space-sm);
}

.filters-bar.extended .advanced-filters {
  display: grid;
}

.advanced-filters label {
  display: block;
  color: var(--text-secondary);
  font-size: var(--font-sm);
  margin-bottom: var(--space-xxs);
}

.select-wrapper {
  position: relative;
  display: flex;
  flex-direction: column;
}

.select-wrapper::after {
  content: "";
  pointer-events: none;
  position: absolute;
  top: 50%;
  right: var(--space-sm);
  display: inline-block;
  border-left: 0.4rem solid transparent;
  border-right: 0.4rem solid transparent;
  border-top: 0.4rem solid var(--text-secondary);
  transform: translateY(-50%);
}

.select {
  cursor: pointer;
  appearance: none;
  font-size: var(--font-sm);
  color: var(--text-secondary);
  border: 1px solid var(--border);
  padding: var(--space-sm);
  border-radius: var(--radius-md);
  background-color: rgba(var(--bg-primary-rgb), 0.6);
}

@media (min-width: 60rem) {
  .filters-bar {
    display: flex;
    flex-direction: row;
    gap: var(--space-md);
    align-items: center;
    justify-content: space-between;
  }

  .filters-header {
    display: none;
  }

  .filters-bar .advanced-filters {
    flex: 2;
    display: flex;
    gap: var(--space-md);
    margin-top: 0;
  }

  .filter-group {
    flex: 1;
    margin-top: 0;
  }
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act19" ve="7">
			<code>410</code>
			<label>form.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/form.css</Str>
			<Str sr="arg1" ve="3">.form {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.form-content {
  flex: 1;
}

.form-group {
  display: flex;
  flex-direction: column;
  margin-top: var(--space-xs);
  gap: 0.6rem;
}

.form-group:first-child {
  margin-top: 0;
}

.form-label {
  font-size: var(--font-sm);
  font-weight: 500;
  color: var(--text-secondary);
}

.form-input,
.form-textarea,
.form-select {
  font-size: var(--font-sm);
  color: var(--text-primary);
  width: 100%;
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  padding: var(--space-xs) var(--space-sm);
  background-color: rgba(var(--bg-primary-rgb), .6);
  transition:
    border-color 0.2s,
    box-shadow 0.2s;
}

.form-textarea {
  min-height: 8rem;
  resize: none;
}

.form-error {
  font-size: var(--font-xs);
  color: var(--danger-dark);
  height: 1.8rem;
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>342</code>
			<Int sr="arg0" val="5"/>
			<Str sr="arg1" ve="3">%version_path</Str>
			<Str sr="arg2" ve="3">%version_exists</Str>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="1"/>
		</Action>
		<Action sr="act20" ve="7">
			<code>410</code>
			<label>main.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/main.css</Str>
			<Str sr="arg1" ve="3">.main {
  display: flex;
  flex-direction: column;
  padding: var(--space-lg);
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act21" ve="7">
			<code>410</code>
			<label>modal.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/modal.css</Str>
			<Str sr="arg1" ve="3">.modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  visibility: hidden;
  opacity: 0;
  z-index: 200;
}

.modal.show {
  visibility: visible;
  opacity: 1;
  transition-delay: 0s;
}

.modal-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(var(--black-rgb), 0.4);
  backdrop-filter: blur(0.6rem);
}

.modal-content {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 90%;
  max-width: 50rem;
  max-height: 90%;
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  padding: var(--space-lg) 0;
  background: linear-gradient(
    145deg,
    rgba(var(--bg-secondary-rgb), 0.85),
    rgba(var(--bg-primary-rgb), 0.8)
  );
  backdrop-filter: blur(1rem);
  box-shadow:
    0 1rem 2.5rem -0.5rem rgba(var(--black-rgb), 0.3),
    0 0.8rem 1rem -0.6rem rgba(var(--black-rgb), 0.2);
  transform: scale(0.95);
  transition: transform 0.2s;
  overflow: hidden;
}

.modal.show .modal-content {
  transform: scale(1);
}

.modal-header {
  position: relative;
  margin: 0 var(--space-lg);
  margin-bottom: var(--space-lg);
}

.modal-title {
  font-size: var(--font-xl);
  font-weight: bold;
}

.modal-close {
  position: absolute;
  top: 0;
  right: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.8rem;
  height: 2.8rem;
  color: var(--text-primary);
  border-radius: 50%;
  background: transparent;
  transition: all 0.2s ease;
}

.modal-close:active {
  background: rgba(255, 255, 255, 0.1);
  transform: scale(1.1);
}

.modal-close svg {
  color: var(--text-secondary);
  width: var(--icon-md);
  height: var(--icon-md);
  margin: 0;
}

.modal-description {
  color: var(--text-muted);
  font-size: var(--font-sm);
  margin-top: var(--space-xs);
}

/* Modal Body */

.modal-body {
  flex: 1;
  display: flex;
  flex-direction: column;
  padding: 0 var(--space-lg);
  overflow-y: auto;
}

/* Modal actions */

.modal-actions {
  display: flex;
  justify-content: flex-end;
  gap: var(--space-sm);
  padding: 0 var(--space-lg);
  margin-top: var(--space-sm);
}

.modal-actions svg {
  margin-right: 0.5rem;
}

.button-primary {
  color: var(--text-primary);
  background-color: rgba(var(--gradient-start-rgb), 0.7);
}

.button-primary:active {
  background-color: rgba(var(--gradient-start-rgb), 0.9);
}

.button-outline {
  color: var(--text-primary);
  border: 1px solid var(--border);
  background-color: transparent;
}

.button-outline:active {
  background-color: var(--bg-button-hover);
}

@media (min-width: 102.4rem) {
  .modal-content {
    max-width: 60rem;
  }
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act22" ve="7">
			<code>410</code>
			<label>categories.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/categories.css</Str>
			<Str sr="arg1" ve="3">.categories-nav {
  display: flex;
  align-items: center;
  margin-top: var(--space-md);
}

.category-buttons {
  flex: 1;
  display: flex;
  overflow-x: auto;
}

.category-button {
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  white-space: nowrap;
  padding: var(--space-xs) var(--space-md);
  border: 1px solid rgba(var(--gradient-start-rgb), 0.1);
  border-radius: var(--radius-full);
  margin-right: var(--space-xs);
  background: linear-gradient(
    135deg,
    rgba(var(--gradient-start-rgb), 0.08),
    rgba(var(--gradient-end-rgb), 0.02)
  );
  transition: all 0.2s ease;
}

.category-button.active {
  border-color: var(--category-color);
}

.category-name {
  font-size: var(--font-sm);
  color: var(--text-secondary);
}

.category-count.badge {
  color: var(--text-primary);
  border: none;
  background: var(--category-color);
}

.add-category-btn {
  padding: var(--space-xxs);
  border: 1px dashed rgba(var(--gradient-start-rgb), 0.4);
  margin-left: var(--space-sm);
  border-radius: 50px;
}

.add-category-btn svg {
  color: rgba(var(--gradient-start-rgb), 0.4);
}

/* Category Modal */

#category-modal .modal-content {
  height: 90%;
}

#category-modal .form {
  flex: none;
  border: 1px dashed var(--border);
  padding: var(--space-md);
  border-radius: var(--radius-md);
}

#category-modal .form-group {
  min-width: 0;
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  transition: border 0.3s ease;
}

#category-modal .form-group:nth-child(2) {
  margin-top: var(--space-md);
}

#category-modal .form-group:focus-within {
  border: 1px solid var(--ring);
}

#category-modal .form-label {
  margin-left: var(--space-md);
  padding: 0 var(--space-xxs);
}

#category-modal .form-input {
  background: transparent;
  border: none;
  padding: var(--space-md);
  padding-top: var(--space-xs);
  box-shadow: none;
}

/* Color Picker */

.color-picker {
  display: flex;
  gap: var(--space-xs);
  padding: var(--space-md);
  padding-top: var(--space-xs);
  overflow-x: auto;
}

.color-item {
  position: relative;
  width: 3rem;
  height: 3rem;
  border: 2px solid transparent;
  border-radius: 50%;
  flex-shrink: 0;
  transition: all 0.2s ease;
}

.color-item:hover {
  transform: scale(1.1);
  box-shadow: 0 4px 12px rgba(var(--black-rgb), 0.3);
}

.color-item.selected {
  border-color: var(--text-primary);
  box-shadow: 0 0 0 1px rgba(var(--text-primary-rgb), 0.3);
}

.color-item::after {
  content: "‚úì";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--text-primary);
  font-weight: bold;
  font-size: var(--font-xs);
  opacity: 0;
  transition: opacity 0.2s ease;
}

.color-item.selected::after {
  opacity: 1;
}

.categories-section {
  display: flex;
  flex-direction: column;
  margin-top: var(--space-md);
}

/* Categories Header */

.categories-header {
  display: flex;
  align-items: center;
}

.categories-header h3 {
  font-size: var(--font-lg);
}

.categories-count.badge {
  min-height: 2.2rem;
  font-weight: 700;
  margin-left: var(--space-xs);
}

/* Categories Grid */

.categories-grid {
  flex: 1;
  border-radius: var(--radius-md);
  border: 1px solid var(--border);
  max-height: 400px;
  margin-top: var(--space-md);
  background: rgba(var(--bg-secondary-rgb), 0.6);
  overflow-y: auto;
}

.category-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--space-md);
  border-bottom: 1px solid var(--border);
}

.category-item:last-child {
  border-bottom: none;
}

.category-info {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
}

.category-color {
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
}

.category-actions {
  display: flex;
  gap: var(--space-xxs);
}

.category-actions svg {
  pointer-events: none;
}

.category-actions button {
  background: transparent;
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act23" ve="7">
			<code>410</code>
			<label>routines.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/routines.css</Str>
			<Str sr="arg1" ve="3">/* Next Routine */

.next-routine {
  display: none;
  border: 1px solid rgba(var(--gradient-start-rgb), 0.1);
  border-radius: var(--radius-md);
  padding: var(--space-md);
  margin-top: var(--space-lg);
  background: linear-gradient(
    135deg,
    rgba(var(--gradient-start-rgb), 0.08),
    rgba(var(--gradient-end-rgb), 0.01)
  );
  animation: fade-in 0.5s ease-out;
}

.next-routine-title {
  font-size: var(--font-md);
  font-weight: 600;
  color: var(--text-secondary);
  margin-bottom: var(--space-sm);
}

.next-routine-info {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
}

.next-routine-info svg {
  width: var(--icon-lg);
  height: var(--icon-lg);
  color: rgb(var(--gradient-start-rgb));
}

.next-routine-info span {
  font-size: calc(var(--font-md) + 0.1rem);
  font-weight: 500;
  color: var(--text-primary);
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(-1rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.routines-section {
  margin-top: var(--space-lg);
}

/* Routine grid */

.routines-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--space-md);
  padding-bottom: 10rem;
}

.routine-card {
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  background-color: var(--bg-secondary);
  box-shadow:
    0 0.4rem 0.6rem -0.1rem rgba(var(--black-rgb), 0.1),
    0 0.2rem 0.4rem -0.1rem rgba(var(--black-rgb), 0.06);
  overflow: hidden;
  transition: all 0.3s;
}

.routine-card:hover {
  transform: scale(1.03);
}

.routine-card.inactive {
  opacity: 0.6;
  filter: grayscale(1);
}

.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 var(--space-md);
  padding-top: var(--space-sm);
}

.card-title {
  color: var(--text-secondary);
  font-size: calc(var(--font-md) + 0.1rem);
  font-weight: 500;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

.priority-badge {
  font-size: var(--font-xxs);
  font-weight: 500;
  white-space: nowrap;
  margin-left: var(--space-xs);
  padding: 0.2rem var(--space-xs);
  border: 1px solid transparent;
  border-radius: var(--radius-full);
}

.priority-high {
  background-image: linear-gradient(to right, #ef4444, #f87171);
  color: var(--text-primary);
}

.priority-medium {
  background-image: linear-gradient(to right, #f97316, #fbbf24);
  color: var(--text-primary);
}

.priority-low {
  background-image: linear-gradient(to right, #10b981, #34d399);
  color: var(--text-primary);
}

.card-body {
  padding: 0 var(--space-md);
  padding-top: var(--space-xs);
}

.card-description {
  font-size: var(--font-sm);
  color: var(--text-muted);
}

.card-time {
  display: flex;
  align-items: center;
  margin-top: var(--space-sm);
}

.card-time svg,
.card-days svg {
  color: var(--text-muted);
  width: 1.6rem;
  height: 1.6rem;
  margin-right: var(--space-xs);
}

.card-time span {
  color: var(--text-muted);
  font-size: var(--font-xs);
}

.card-command {
  display: flex;
  align-items: center;
  margin-top: var(--space-xs);
}

.card-command svg {
  color: var(--text-muted);
  width: 1.6rem;
  height: 1.6rem;
  margin-right: var(--space-xs);
}

.card-command code {
  color: var(--text-secondary);
  font-size: var(--font-xs);
  padding: .3rem .6rem;
  border-radius: var(--radius-sm);
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  background: linear-gradient(
    180deg,
    rgba(var(--gradient-start-rgb), 0.1),
    rgba(var(--gradient-end-rgb), 0.02)
  );
}

.card-days {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  margin-top: var(--space-xs);
  margin-bottom: var(--space-md);
}

.day-tag {
  color: var(--text-secondary);
  font-size: var(--font-xs);
  padding: 0.3rem var(--space-xs);
  margin-right: var(--space-xs);
  border-radius: var(--radius-sm);
  background: linear-gradient(
    180deg,
    rgba(var(--gradient-start-rgb), 0.1),
    rgba(var(--gradient-end-rgb), 0.02)
  );
}

/* Card actions */

.card-footer {
  display: none;
  padding: 0 var(--space-md);
  padding-bottom: var(--space-sm);
}

.routine-card:hover .card-footer {
  display: block;
}

.card-actions {
  display: flex;
  justify-content: flex-end;
  width: 100%;
  padding-top: var(--space-sm);
  border-top: 1px solid var(--border);
}

.card-actions .button {
  margin-left: var(--space-md);
}

.card-actions svg {
  pointer-events: none;
}

.card-actions .button:first-child {
  margin-right: auto;
  margin-left: 0;
}

.routine-toggle-btn {
  color: var(--success-medium);
  background-color: rgba(var(--success-dark-rgb), 0.2);
}

.routine-toggle-btn:active {
  background-color: rgba(var(--success-dark-rgb), 0.3);
}

.routine-edit-btn {
  color: var(--text-primary);
  background: var(--border);
}

.routine-edit-btn:active {
  background-color: var(--text-muted);
}

/* Empty state */

.empty-state {
  display: none;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--space-xxl);
  margin: var(--space-md);
  border-radius: var(--radius-lg);
  text-align: center;
  animation: fade-in 0.5s ease-out;
}

.empty-state.show {
  display: flex;
}

.empty-state &gt; svg {
  width: 6rem;
  height: 6rem;
  color: rgba(var(--gradient-start-rgb), 0.8);
  margin-bottom: var(--space-lg);
}

.empty-text {
  font-size: var(--font-lg);
  color: var(--text-secondary);
  max-width: 40ch;
  margin-bottom: var(--space-xl);
}

.empty-state button {
  font-size: var(--font-md);
  padding: var(--space-sm) var(--space-lg);
}

.empty-state button svg {
  margin-right: var(--space-sm);
  width: var(--icon-md);
  height: var(--icon-md);
}

/* Routines Modal */

#routine-modal .modal-content {
  height: 90%;
}

#routine-modal .modal-body {
  padding: 0;
}

#routine-modal .form-content {
  flex: 1;
  overflow-y: auto;
  padding: 0 var(--space-lg);
}

/* Form days */

.days-container {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-xs);
}

.day-button {
  font-size: var(--font-xs);
  color: var(--text-primary);
  padding: 0.6rem var(--space-sm);
  border: 1px solid var(--border);
  border-radius: var(--radius-sm);
  background: rgba(var(--bg-primary-rgb), 0.6);
}

.day-button:active {
  background: var(--bg-secondary);
}

.day-button.selected {
  background-color: rgba(var(--gradient-start-rgb), 0.6);
  border-color: rgba(var(--gradient-start-rgb), 0.1);
}

@media (min-width: 102.4rem) {
  .main {
    max-width: 120rem;
    margin: 0 auto;
  }

  .routines-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (min-width: 128rem) {
  .routines-grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

@media (min-width: 60rem) {
  .routines-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act24" ve="7">
			<code>410</code>
			<label>commands.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/commands.css</Str>
			<Str sr="arg1" ve="3">.command-dropdown {
  display: none;
  position: absolute;
  left: 0;
  right: 0;
  bottom: 100%;
  max-height: 15rem;
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  margin-bottom: var(--space-xxs);
  background: var(--bg-secondary);
  box-shadow: 0 0.4rem 1.2rem rgba(var(--black-rgb), 0.15);
  overflow-y: auto;
  z-index: 300;
}

.command-dropdown.show {
  display: block;
}

.suggestion-item {
  display: flex;
  align-items: center;
  padding: var(--space-xs) var(--space-md);
  border-bottom: 1px solid var(--border);
  transition: background-color 0.2s ease;
}

.suggestion-item:last-child {
  border-bottom: none;
}

.suggestion-item:active {
  background-color: var(--bg-button-hover);
}

.suggestion-item svg {
  width: var(--icon-md);
  height: var(--icon-md);
  margin-right: var(--space-sm);
  color: var(--text-secondary);
}

.suggestion-content {
  flex: 1;
}

.suggestion-command {
  display: flex;
  align-items: center;
  font-weight: 600;
  color: var(--text-primary);
  font-size: var(--font-sm);
  margin-bottom: 0.2rem;
}

.suggestion-command-value {
  margin-left: var(--space-xxs);
  color: var(--text-secondary);
}

.suggestion-description {
  font-size: var(--font-xs);
  color: var(--text-muted);
  line-height: 1.3;
}

.form-group {
  position: relative;
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act25" ve="7">
			<code>410</code>
			<label>app-picker.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/app-picker.css</Str>
			<Str sr="arg1" ve="3">#app-picker-modal {
  z-index: 1000;
}

#app-picker-modal .modal-content {
  height: 90%;
}

.apps-grid {
  flex: 1;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(10rem, 1fr));
  gap: var(--space-sm);
  overflow-y: auto;
}

.app-card {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: var(--space-sm);
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  background: var(--bg-secondary);
  transition: transform 0.2s ease;
}

.app-card:active {
  transform: scale(1.1);
}

.app-icon {
  width: 4.8rem;
  height: 4.8rem;
  margin-bottom: var(--space-sm);
}

.app-name {
  font-size: var(--font-xs);
  font-weight: 500;
  color: var(--text-primary);
  line-height: 1.2;
  word-break: break-word;
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act26" ve="7">
			<code>410</code>
			<label>task-picker.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/task-picker.css</Str>
			<Str sr="arg1" ve="3">#task-picker-modal {
  z-index: 1000;
}

#task-picker-modal .modal-content {
  height: 90%;
}

#task-picker-modal .modal-header {
  margin-bottom: 0;
}

#task-picker-modal .modal-body {
  padding: 0;
  padding-top: var(--space-lg);
  overflow: hidden;
}

#task-picker-modal .search-wrapper {
  margin: 0 var(--space-lg);
}

/* Tasks Header */

.tasks-section {
  flex: 1;
  display: flex;
  flex-direction: column;
  margin-top: var(--space-md);
  overflow: hidden;
}

.tasks-header {
  display: flex;
  align-items: center;
  padding: 0 var(--space-lg);
}

.tasks-header h3 {
  font-size: var(--font-lg);
}

.tasks-count.badge {
  font-weight: 700;
  min-height: 2.2rem;
  margin-left: var(--space-xs);
}

/* Tasks Grid */

.tasks-grid {
  flex: 1;
  display: grid;
  grid-template-columns: 1fr 1fr;
  padding: 0 var(--space-lg);
  gap: var(--space-sm);
  margin-top: var(--space-md);
  overflow-y: auto;
}

.task-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: var(--space-sm) var(--space-md);
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  background: rgba(var(--bg-secondary-rgb), 0.5);
  transition: transform 0.2s ease;
}

.task-card:active {
  transform: scale(1.02);
}

.task-name {
  font-size: var(--font-sm);
  font-weight: 500;
  color: var(--text-secondary);
  line-height: 1.2;
  word-break: break-word;
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act27" ve="7">
			<code>410</code>
			<label>settings.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/settings.css</Str>
			<Str sr="arg1" ve="3">#settings-modal .modal-header {
  margin-bottom: 0;
}

.setting-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: var(--space-lg);
}

.setting-item label {
  color: var(--text-secondary);
}

/* Switch toggle */

.setting-item input {
  --toggle-padding: 0.3rem;
  --toggle-width: 4.4rem;
  --toggle-height: 2.4rem;
  --toggle-bubble: calc(var(--toggle-height) - (var(--toggle-padding) * 2));
  appearance: none;
  display: flex;
  align-items: center;
  padding: 0 var(--toggle-padding);
  width: var(--toggle-width);
  height: var(--toggle-height);
  background-color: var(--bg-primary);
  border: 1px solid var(--border);
  border-radius: 3.4rem;
  outline: none;
  transition: all 0.4s ease;
}

.setting-item input {
  box-shadow: none;
}

.setting-item input:checked {
  background-color: rgba(var(--gradient-start-rgb), 0.5);
  border-color: rgba(var(--gradient-start-rgb), 0.2);
}

.setting-item input::before {
  content: "";
  width: var(--toggle-bubble);
  height: var(--toggle-bubble);
  background-color: var(--text-muted);
  border-radius: 50%;
  transition: margin 0.3s ease;
}

.setting-item input:checked::before {
  margin-left: calc(100% - var(--toggle-bubble));
  background-color: var(--text-secondary);
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act28" ve="7">
			<code>410</code>
			<label>toast.css</label>
			<Str sr="arg0" ve="3">%project_path/src/assets/styles/toast.css</Str>
			<Str sr="arg1" ve="3">.toast-container {
  position: fixed;
  left: 50%;
  bottom: var(--space-lg);
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
  transform: translateX(-50%);
  z-index: 1000;
}

.toast {
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  color: var(--text-primary);
  max-width: 60rem;
  padding: var(--space-sm) var(--space-md);
  border-radius: var(--radius-md);
  background-color: var(--bg-secondary);
  box-shadow:
    0 0.4rem 1.2rem rgba(var(--black-rgb), 0.15),
    0 0.2rem 0.4rem rgba(var(--black-rgb), 0.1);
  animation: slide-up 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.toast-success {
  border-left: 0.4rem solid rgb(var(--gradient-end-rgb));
}

.toast-error {
  border-left: 0.4rem solid var(--danger-dark);
}

.toast span {
  color: var(--text-secondary);
  white-space: nowrap;
}

.toast svg {
  flex-shrink: 0;
  width: 2rem;
  height: 2rem;
}

.toast-success svg {
  color: rgb(var(--gradient-end-rgb));
}

.toast-error svg {
  color: var(--danger-dark);
}

.toast-close {
  display: flex;
  background: transparent;
  border: none;
  margin-left: auto;
}

@keyframes slide-up {
  from {
    transform: translateY(2rem);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act29" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act3" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%version_exists</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act30" ve="7">
			<code>37</code>
			<coll>true</coll>
			<label>Create javascript files</label>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>javascript</lhs>
					<op>2</op>
					<rhs>javascript</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act31" ve="7">
			<code>410</code>
			<label>EnvironmentManager.js</label>
			<Str sr="arg0" ve="3">%project_path/src/services/EnvironmentManager.js</Str>
			<Str sr="arg1" ve="3">const EnvironmentManager = (() =&gt; {
  const WebEnvironment = (() =&gt; {
    const NAME = "web";
    const WORK_DIR = ".";
    const LANG_CODE = "pt-BR";
    const ICON_PATH = "/src/assets/icons/";

    const STORAGE_KEYS = {
      routines: "@routine-flow:routines",
      settings: "@routine-flow:settings",
      categories: "@routine-flow:categories"
    };

    async function loadLang(code) {
      const response = await fetch(`${WORK_DIR}/src/locales/${code}.json`);
      return await response.json();
    }

    function loadApps() {
      return DEFAULT_APPS;
    }

    function loadTasks() {
      return DEFAULT_TASKS;
    }

    function getCategories() {
      return localStorage.getItem(STORAGE_KEYS.categories);
    }

    function saveCategories(data) {
      localStorage.setItem(STORAGE_KEYS.categories, data);
    }

    function getRoutines() {
      return localStorage.getItem(STORAGE_KEYS.routines);
    }

    function saveRoutines(data) {
      localStorage.setItem(STORAGE_KEYS.routines, data);
    }

    function getSettings() {
      return localStorage.getItem(STORAGE_KEYS.settings);
    }

    function saveSettings(settings) {
      localStorage.setItem(STORAGE_KEYS.settings, settings);
    }

    function exit() {
      alert("Fechando aplica√ß√£o...");
    }

    return {
      name: NAME,
      langCode: LANG_CODE,
      workDir: WORK_DIR,
      iconPath: ICON_PATH,
      loadLang,
      loadApps,
      loadTasks,
      getCategories,
      saveCategories,
      getRoutines,
      saveRoutines,
      getSettings,
      saveSettings,
      exit
    };
  })();

  function detect() {
    return typeof tk === "undefined" ? WebEnvironment : TaskerEnvironment;
  }

  return {
    detect
  };
})();

const ENV = EnvironmentManager.detect();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act32" ve="7">
			<code>410</code>
			<label>Utils.js</label>
			<Str sr="arg0" ve="3">%project_path/src/shared/Utils.js</Str>
			<Str sr="arg1" ve="3">const Utils = (() =&gt; {
  const HOUR_SECS = 3600;
  const MINUTE_SECS = 60;
  const DAY_KEYS = [
    "day_sun",
    "day_mon",
    "day_tue",
    "day_wed",
    "day_thu",
    "day_fri",
    "day_sat"
  ];

  function pad(time) {
    return time.toString().padStart(2, "0");
  }

  function secondsToTime(secs) {
    const hours = Math.floor(secs / HOUR_SECS);
    const minutes = Math.floor((secs % HOUR_SECS) / MINUTE_SECS);
    return `${pad(hours)}:${pad(minutes)}`;
  }

  function getDayName(day) {
    const key = DAY_KEYS[day];
    return I18n.get(key) || "";
  }

  function timeToSeconds(time) {
    const parts = time.split(":").map(Number);
    const [hours, minutes] = parts;
    return hours * HOUR_SECS + minutes * MINUTE_SECS;
  }

  return {
    secondsToTime,
    getDayName,
    timeToSeconds
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act33" ve="7">
			<code>410</code>
			<label>DOM.js</label>
			<Str sr="arg0" ve="3">%project_path/src/shared/DOM.js</Str>
			<Str sr="arg1" ve="3">const DOM = (() =&gt; {
  function $(selector, el = document) {
    return el.querySelector(selector);
  }

  function $$(selector, el = document) {
    return el.querySelectorAll(selector);
  }

  return { $, $$ };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act34" ve="7">
			<code>410</code>
			<label>I18n.js</label>
			<Str sr="arg0" ve="3">%project_path/src/services/I18n.js</Str>
			<Str sr="arg1" ve="3">const I18n = (function () {
  const DEFAULT_LANG = "en";
  const APP_LANG = "pt";
  let data = {};

  function get(key) {
    return data[key] || key;
  }

  function isInput(el) {
    return el.tagName === "INPUT" || el.tagName === "TEXTAREA";
  }

  function translateEl(el) {
    const key = el.getAttribute("data-i18n");
    const text = get(key);

    if (isInput(el)) {
      el.placeholder = text;
    } else {
      el.textContent = text;
    }
  }

  function translateUI() {
    const elements = document.querySelectorAll("[data-i18n]");
    elements.forEach(translateEl);
  }

  function extractBase(lang) {
    return lang.split("-")[0];
  }

  async function loadData(lang) {
    try {
      data = await ENV.loadLang(extractBase(lang));
    } catch (error) {
      console.error("Error loading language data:", error);
      data = await ENV.loadLang(DEFAULT_LANG);
    }
  }

  function shouldTranslate() {
    return !ENV.langCode.includes(APP_LANG);
  }

  async function init() {
    await loadData(ENV.langCode);

    if (shouldTranslate()) {
      translateUI();
    }

    document.body.classList.remove("loading");
  }

  return { init, get };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act35" ve="7">
			<code>410</code>
			<label>Icons.js</label>
			<Str sr="arg0" ve="3">%project_path/src/services/Icons.js</Str>
			<Str sr="arg1" ve="3">const IconUtils = (() =&gt; {
  function buildAttrs(attrs) {
    const entries = Object.entries(attrs);
    return entries.map(([k, v]) =&gt; `${k}="${v}"`).join(" ");
  }

  function copy(source, attributes) {
    const attrs = {};
    attributes.forEach(attr =&gt; {
      const v = source.getAttribute(attr);
      if (v) attrs[attr] = v;
    });
    return attrs;
  }

  function buildSvg(content, attrs = {}) {
    return `&lt;svg ${buildAttrs(attrs)}&gt;${content}&lt;/svg&gt;`;
  }

  function createElement(html) {
    const temp = document.createElement("div");
    temp.innerHTML = html;
    const el = temp.firstElementChild;
    temp.remove();
    return el;
  }

  function warn(message) {
    console.warn(`[Icons] ${message}`);
  }

  return { copy, buildSvg, createElement, warn };
})();

const Icons = (() =&gt; {
  const DEFAULT_ATTRS = {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  };

  const DATA = {
    "calendar-clock":
      '&lt;path d="M16 14v2.2l1.6 1"/&gt;&lt;path d="M16 2v4"/&gt;&lt;path d="M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5"/&gt;&lt;path d="M3 10h5"/&gt;&lt;path d="M8 2v4"/&gt;&lt;circle cx="16" cy="16" r="6"/&gt;',
    settings:
      '&lt;path d="M9.671 4.136a2.34 2.34 0 0 1 4.659 0 2.34 2.34 0 0 0 3.319 1.915 2.34 2.34 0 0 1 2.33 4.033 2.34 2.34 0 0 0 0 3.831 2.34 2.34 0 0 1-2.33 4.033 2.34 2.34 0 0 0-3.319 1.915 2.34 2.34 0 0 1-4.659 0 2.34 2.34 0 0 0-3.32-1.915 2.34 2.34 0 0 1-2.33-4.033 2.34 2.34 0 0 0 0-3.831A2.34 2.34 0 0 1 6.35 6.051a2.34 2.34 0 0 0 3.319-1.915"/&gt;&lt;circle cx="12" cy="12" r="3"/&gt;',
    "settings-2":
      '&lt;path d="M14 17H5"/&gt;&lt;path d="M19 7h-9"/&gt;&lt;circle cx="17" cy="17" r="3"/&gt;&lt;circle cx="7" cy="7" r="3"/&gt;',
    "chevron-down": '&lt;polyline points="6,9 12,15 18,9"/&gt;',
    filter: '&lt;polygon points="22,3 2,3 10,12.46 10,19 14,21 14,12.46"/&gt;',
    search: '&lt;circle cx="11" cy="11" r="8"/&gt;&lt;path d="m21 21-4.35-4.35"/&gt;',
    "brush-cleaning":
      '&lt;path d="m16 22-1-4"/&gt;&lt;path d="M19 13.99a1 1 0 0 0 1-1V12a2 2 0 0 0-2-2h-3a1 1 0 0 1-1-1V4a2 2 0 0 0-4 0v5a1 1 0 0 1-1 1H6a2 2 0 0 0-2 2v.99a1 1 0 0 0 1 1"/&gt;&lt;path d="M5 14h14l1.973 6.767A1 1 0 0 1 20 22H4a1 1 0 0 1-.973-1.233z"/&gt;&lt;path d="m8 22 1-4"/&gt;',
    "circle-stop":
      '&lt;circle cx="12" cy="12" r="10"/&gt;&lt;rect x="9" y="9" width="6" height="6" rx="1"/&gt;',
    clock:
      '&lt;circle cx="12" cy="12" r="10"/&gt;&lt;polyline points="12,6 12,12 16,14"/&gt;',
    calendar:
      '&lt;rect x="3" y="4" width="18" height="18" rx="2" ry="2"/&gt;&lt;line x1="16" y1="2" x2="16" y2="6"/&gt;&lt;line x1="8" y1="2" x2="8" y2="6"/&gt;&lt;line x1="3" y1="10" x2="21" y2="10"/&gt;',
    terminal:
      '&lt;path d="m7 11 2-2-2-2"/&gt;&lt;path d="M11 13h4"/&gt;&lt;rect width="18" height="18" x="3" y="3" rx="2" ry="2"/&gt;',
    power:
      '&lt;path d="M18.36 6.64a9 9 0 1 1-12.73 0"/&gt;&lt;line x1="12" y1="2" x2="12" y2="12"/&gt;',
    "power-off":
      '&lt;path d="M18.36 6.64A9 9 0 0 1 20.77 15"/&gt;&lt;path d="M6.16 6.16a9 9 0 0 0-2.07 8.95"/&gt;&lt;path d="M12 2v4"/&gt;&lt;path d="m2 2 20 20"/&gt;',
    edit: '&lt;path d="M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"/&gt;&lt;path d="M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z"/&gt;',
    trash2:
      '&lt;polyline points="3,6 5,6 21,6"/&gt;&lt;path d="m19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"/&gt;&lt;line x1="10" y1="11" x2="10" y2="17"/&gt;&lt;line x1="14" y1="11" x2="14" y2="17"/&gt;',
    check: '&lt;polyline points="20,6 9,17 4,12"/&gt;',
    "calendar-plus":
      '&lt;path d="M16 19h6"/&gt;&lt;path d="M16 2v4"/&gt;&lt;path d="M19 16v6"/&gt;&lt;path d="M21 12.598V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8.5"/&gt;&lt;path d="M3 10h18"/&gt;&lt;path d="M8 2v4"/&gt;',
    "calendar-sync":
      '&lt;path d="M11 10v4h4"/&gt;&lt;path d="m11 14 1.535-1.605a5 5 0 0 1 8 1.5"/&gt;&lt;path d="M16 2v4"/&gt;&lt;path d="m21 18-1.535 1.605a5 5 0 0 1-8-1.5"/&gt;&lt;path d="M21 22v-4h-4"/&gt;&lt;path d="M21 8.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h4.3"/&gt;&lt;path d="M3 10h4"/&gt;&lt;path d="M8 2v4"/&gt;',
    x: '&lt;line x1="18" y1="6" x2="6" y2="18"/&gt;&lt;line x1="6" y1="6" x2="18" y2="18"/&gt;',
    "check-circle": '&lt;path d="m9 12 2 2 4-4"/&gt;&lt;circle cx="12" cy="12" r="9"/&gt;',
    "circle-alert":
      '&lt;circle cx="12" cy="12" r="10"/&gt;&lt;line x1="12" x2="12" y1="8" y2="12"/&gt;&lt;line x1="12" x2="12.01" y1="16" y2="16"/&gt;',
    plus: '&lt;path d="M5 12h14"/&gt;&lt;path d="M12 5v14"/&gt;',
    save: '&lt;path d="M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z"/&gt;&lt;path d="M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7"/&gt;&lt;path d="M7 3v4a1 1 0 0 0 1 1h7"/&gt;',

    rocket:
      '&lt;path d="M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z"/&gt;&lt;path d="m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z"/&gt;&lt;path d="M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0"/&gt;&lt;path d="M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5"/&gt;',
    "lock-screen":
      '&lt;rect width="14" height="20" x="5" y="2" rx="2" ry="2"/&gt;&lt;g transform="translate(12, 12)"&gt;&lt;rect x="-2" y="-1.5" width="4" height="3" rx="0.5" fill="none"/&gt;&lt;path d="M -1.5 -1.5 Q -1.5 -2.5 0 -2.5 Q 1.5 -2.5 1.5 -1.5" fill="none"/&gt;&lt;circle cx="0" cy="0" r="0.3" fill="currentColor"/&gt;&lt;/g&gt;',
    bluetooth: '&lt;path d="m7 7 10 10-5 5V2l5 5L7 17"/&gt;',
    plane:
      '&lt;path d="M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z"/&gt;',
    "todo-list":
      '&lt;rect x="3" y="5" width="6" height="6" rx="1"/&gt;&lt;path d="m3 17 2 2 4-4"/&gt;&lt;path d="M13 6h8"/&gt;&lt;path d="M13 12h8"/&gt;&lt;path d="M13 18h8"/&gt;',
    wifi: '&lt;path d="M12 20h.01"/&gt;&lt;path d="M2 8.82a15 15 0 0 1 20 0"/&gt;&lt;path d="M5 12.859a10 10 0 0 1 14 0"/&gt;&lt;path d="M8.5 16.429a5 5 0 0 1 7 0"/&gt;',
    signal:
      '&lt;path d="M2 20h.01"/&gt;&lt;path d="M7 20v-4"/&gt;&lt;path d="M12 20v-8"/&gt;&lt;path d="M17 20V8"/&gt;&lt;path d="M22 4v16"/&gt;',
    play: '&lt;path d="M5 5a2 2 0 0 1 3.008-1.728l11.997 6.998a2 2 0 0 1 .003 3.458l-12 7A2 2 0 0 1 5 19z"/&gt;'
  };

  function create(name, attrs = {}) {
    const content = DATA[name];
    if (!content) {
      IconUtils.warn(`Icon "${name}" not found`);
      return null;
    }

    const finalAttrs = { ...DEFAULT_ATTRS, ...attrs };
    return IconUtils.buildSvg(content, finalAttrs);
  }

  function replace(el) {
    const name = el.dataset.icon;
    const attrs = IconUtils.copy(el, ["id", "class"]);
    const svg = create(name, attrs);

    if (svg) {
      const svgEl = IconUtils.createElement(svg);
      el.parentNode.replaceChild(svgEl, el);
    }
  }

  function render(container = document) {
    const elements = container.querySelectorAll("[data-icon]");
    elements.forEach(replace);
  }

  function getIcon(name, attrs = {}) {
    return create(name, attrs);
  }

  function init() {
    render();
  }

  return { getIcon, init };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act36" ve="7">
			<code>410</code>
			<label>TimeService.js</label>
			<Str sr="arg0" ve="3">%project_path/src/services/TimeService.js</Str>
			<Str sr="arg1" ve="3">const TimeService = (() =&gt; {
  let intervalId = null;
  let nextTimestamp = Infinity;

  function setNext(timestamp) {
    nextTimestamp = timestamp;
  }

  function checkTime() {
    const now = Math.floor(Date.now() / 1000);
    if (now &gt;= nextTimestamp) {
      RoutineRenderer.updateNext();
    }
  }

  function start() {
    intervalId = setInterval(checkTime, 1000);
  }

  function init() {
    start();
  }

  return {
    init,
    setNext
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act37" ve="7">
			<code>410</code>
			<label>PaginationManager.js</label>
			<Str sr="arg0" ve="3">%project_path/src/services/PaginationManager.js</Str>
			<Str sr="arg1" ve="3">const PaginationManager = (() =&gt; {
  function create(config) {
    const {
      scrollElement,
      renderAppend,
      pageSize = 10,
      thresholdPx = 200
    } = config;

    const state = {
      items: [],
      pageIndex: 0,
      loading: false
    };

    function hasMore() {
      return state.pageIndex * pageSize &lt; state.items.length;
    }

    function getSlice() {
      const start = state.pageIndex * pageSize;
      const end = Math.min(start + pageSize, state.items.length);
      return state.items.slice(start, end);
    }

    function loadNext() {
      if (state.loading || !hasMore()) return;
      state.loading = true;

      const nextItems = getSlice();
      renderAppend(nextItems);
      state.pageIndex += 1;

      state.loading = false;
    }

    function isNearBottom() {
      const pos = scrollElement.scrollTop + scrollElement.clientHeight;
      const max = scrollElement.scrollHeight;
      const distance = max - pos;
      return distance &lt;= thresholdPx;
    }

    function onScroll() {
      if (isNearBottom()) loadNext();
    }

    function attach() {
      scrollElement.addEventListener("scroll", onScroll, { passive: true });
    }

    function fill() {
      let counter = 0;
      while (
        hasMore() &amp;&amp;
        scrollElement.scrollHeight &lt;= scrollElement.clientHeight &amp;&amp;
        counter &lt; 100
      ) {
        loadNext();
        counter += 1;
      }
    }

    function load(newItems) {
      state.items = Array.isArray(newItems) ? newItems : [];
      state.pageIndex = 0;
      loadNext();
      fill();
    }

    attach();

    return {
      load
    };
  }

  return { create };
})();</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act38" ve="7">
			<code>410</code>
			<label>Modal.js</label>
			<Str sr="arg0" ve="3">%project_path/src/components/Modal.js</Str>
			<Str sr="arg1" ve="3">const Modal = (() =&gt; {
  const modalStack = [];

  function toggleModal(modalElement, show) {
    modalElement.classList.toggle("show", show);
  }

  function show(modalElement) {
    if (!modalStack.includes(modalElement)) {
      modalStack.push(modalElement);
    }
    toggleModal(modalElement, true);
  }

  function hide(modalElement) {
    toggleModal(modalElement, false);

    const index = modalStack.indexOf(modalElement);
    if (index &gt; -1) {
      modalStack.splice(index, 1);
    }
  }

  function goBack() {
    if (modalStack.length &gt; 0) {
      const currentModal = modalStack.pop();
      toggleModal(currentModal, false);
      return true;
    }
    return false;
  }

  return {
    show,
    hide,
    goBack
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act39" ve="7">
			<code>410</code>
			<label>Toast.js</label>
			<Str sr="arg0" ve="3">%project_path/src/components/Toast.js</Str>
			<Str sr="arg1" ve="3">const Toast = (() =&gt; {
  const elements = {
    container: DOM.$("#toast-container")
  };

  const ICONS = {
    success: "check-circle",
    error: "circle-alert"
  };

  const AUTO_DELAY = 3000;
  const ANIMATION_DELAY = 10;

  function create(type, message) {
    const toast = document.createElement("div");
    toast.className = `toast toast-${type}`;
    toast.innerHTML = `${Icons.getIcon(ICONS[type])}&lt;span&gt;${message}&lt;/span&gt;`;
    return toast;
  }

  function remove(toast) {
    if (toast.timer) {
      clearTimeout(toast.timer);
      toast.timer = null;
    }
    setTimeout(() =&gt; toast.remove(), ANIMATION_DELAY);
  }

  function setup(toast) {
    toast.addEventListener("click", () =&gt; remove(toast));
    toast.timer = setTimeout(() =&gt; remove(toast), AUTO_DELAY);
    elements.container.appendChild(toast);
  }

  function show(type, messageKey) {
    const message = I18n.get(messageKey);
    const toast = create(type, message);
    setup(toast);
  }

  return { show };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>417</code>
			<se>false</se>
			<Str sr="arg0" ve="3">%version_path</Str>
			<Str sr="arg1" ve="3">%file_version</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act40" ve="7">
			<code>410</code>
			<label>categories.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/categories/data/categories.js</Str>
			<Str sr="arg1" ve="3">const DEFAULT_CATEGORIES = [
  {
    id: "general",
    name: "category_general",
    color: "#3b82f6"
  },
  {
    id: "work",
    name: "category_work",
    color: "#4f46e5"
  },
  {
    id: "study",
    name: "category_study",
    color: "#8b5cf6"
  },
  {
    id: "health",
    name: "category_health",
    color: "#10b981"
  },
  {
    id: "home",
    name: "category_home",
    color: "#f59e0b"
  }
];
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act41" ve="7">
			<code>410</code>
			<label>routines.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/routine/data/routines.js</Str>
			<Str sr="arg1" ve="3">const DEFAULT_ROUTINES = [
  {
    id: 1003,
    title: "Morning Exercise Time",
    description: "30 minutes of exercise to start the day with energy",
    command: "/open FitnessApp",
    priority: "high",
    time: 23400,
    frequency: [1, 3, 5],
    active: true,
    categoryId: "health"
  },
  {
    id: 1002,
    title: "Desligar Wi-Fi para Sair de Casa",
    description: "Desligar o Wi-Fi ao sair para economizar bateria",
    command: "/wifi off",
    priority: "medium",
    time: 27000,
    frequency: [1, 2, 3, 4, 5],
    active: true,
    categoryId: "work"
  },
  {
    id: 1004,
    title: "Activar Internet M√≥vil para el Trayecto",
    description: "Activar datos m√≥viles para conectividad externa",
    command: "/mobile_data on",
    priority: "medium",
    time: 27060,
    frequency: [1, 2, 3, 4, 5],
    active: true,
    categoryId: "work"
  },
  {
    id: 1005,
    title: "Preparing Bluetooth for Car",
    description: "Turns on Bluetooth for automatic car connection",
    command: "/bluetooth on",
    priority: "medium",
    time: 27120,
    frequency: [1, 2, 3, 4, 5],
    active: true,
    categoryId: "work"
  },
  {
    id: 1008,
    title: "Iniciar Playlist Motivacional",
    description: "Abrir Spotify para playlists motivacionais",
    command: "/open Spotify",
    priority: "low",
    time: 27180,
    frequency: [1, 2, 3, 4, 5],
    active: true,
    categoryId: "work"
  },
  {
    id: 1006,
    title: "Activar Modo Concentraci√≥n Total",
    description: "Activar modo avi√≥n para m√°xima productividad",
    command: "/airplane on",
    priority: "high",
    time: 28800,
    frequency: [1, 2, 3, 4, 5],
    active: true,
    categoryId: "work"
  },
  {
    id: 1009,
    title: "Lunch Break and Relaxation Time",
    description: "Opens YouTube to relax during lunch break",
    command: "/open YouTube",
    priority: "medium",
    time: 43200,
    frequency: [1, 2, 3, 4, 5],
    active: true,
    categoryId: "work"
  },
  {
    id: 1014,
    title: "Conectar ao Wi-Fi de Casa",
    description: "Ligar Wi-Fi ao chegar em casa",
    command: "/wifi on",
    priority: "medium",
    time: 64800,
    frequency: [1, 2, 3, 4, 5],
    active: false,
    categoryId: "home"
  },
  {
    id: 1019,
    title: "Organizar la Semana",
    description: "Revisar metas y organizar agenda de la semana",
    command: "/open Calendar",
    priority: "high",
    time: 66600,
    frequency: [0],
    active: true,
    categoryId: "general"
  },
  {
    id: 1015,
    title: "Programming Study Session",
    description: "Time to develop technical skills",
    command: "/open ChatGPT",
    priority: "high",
    time: 68400,
    frequency: [1, 2, 3, 4, 5],
    active: true,
    categoryId: "study"
  },
  {
    id: 1016,
    title: "Remover Distra√ß√µes dos Estudos",
    description: "Fechar Instagram para manter foco nos estudos",
    command: "/close Instagram",
    priority: "high",
    time: 68460,
    frequency: [1, 2, 3, 4, 5],
    active: true,
    categoryId: "study"
  },
  {
    id: 1017,
    title: "Hora de Dormir: Bloquear Pantalla",
    description: "Bloquear pantalla para melhor qualidade do sono",
    command: "/lockscreen",
    priority: "high",
    time: 82800,
    frequency: [0, 1, 2, 3, 4, 5, 6],
    active: true,
    categoryId: "general"
  },
  {
    id: 1013,
    title: "Automatic System Cleanup",
    description: "Executes system cleaning and optimization",
    command: "/run_task PhoneCleanup",
    priority: "medium",
    time: 86340,
    frequency: [6],
    active: true,
    categoryId: "general"
  }
];</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act42" ve="7">
			<code>410</code>
			<label>RoutineService.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/routine/services/RoutineService.js</Str>
			<Str sr="arg1" ve="3">const RoutineService = (() =&gt; {
  const HOURS_IN_SECONDS = 3600;
  const MINUTES_IN_SECONDS = 60;
  const DAYS_IN_WEEK = 7;
  const MS_TO_SECONDS = 1000;

  let routines = [];

  function init() {
    load();
  }

  function getById(id) {
    return routines.find(r =&gt; r.id === id) || null;
  }

  function getAll() {
    return Array.isArray(routines) ? routines : [];
  }

  function add(routine) {
    const newRoutine = { ...routine, id: Date.now() };
    routines.push(newRoutine);
    save();
    EventBus.emit("routine:added", newRoutine);
  }

  function update(id, data) {
    const index = routines.findIndex(r =&gt; r.id === id);
    routines[index] = { ...routines[index], ...data };
    save();
    EventBus.emit("routine:updated", id, routines[index]);
  }

  function removeById(id) {
    routines = routines.filter(r =&gt; r.id !== id);
    save();
    EventBus.emit("routine:deleted", [id]);
  }

  function removeByCategory(id) {
    const deletedIds = [];
    routines = routines.filter(r =&gt; {
      if (r.categoryId === id) {
        deletedIds.push(r.id);
        return false;
      }
      return true;
    });
    save();
    EventBus.emit("routine:deleted", deletedIds);
  }

  function load() {
    const stored = ENV.getRoutines();
    if (!stored) {
      routines = DEFAULT_ROUTINES;
      save();
      return;
    }
    routines = JSON.parse(stored);
  }

  function save() {
    const data = JSON.stringify(routines, null, 2);
    ENV.saveRoutines(data);
  }

  function calculateTimestamp(now, dayOffset, routineTime) {
    const date = new Date(now);
    date.setDate(now.getDate() + dayOffset);

    const hours = Math.floor(routineTime / HOURS_IN_SECONDS);
    const minutes = Math.floor(
      (routineTime % HOURS_IN_SECONDS) / MINUTES_IN_SECONDS
    );
    const seconds = routineTime % MINUTES_IN_SECONDS;

    date.setHours(hours, minutes, seconds, 0);
    return Math.floor(date.getTime() / MS_TO_SECONDS);
  }

  function findNextTimestamp() {
    if (!routines?.length) return null;

    const activeRoutines = routines.filter(r =&gt; r?.active);
    if (!activeRoutines.length) return null;

    const now = new Date();
    const currentDay = now.getDay();
    const currentTime =
      now.getHours() * HOURS_IN_SECONDS +
      now.getMinutes() * MINUTES_IN_SECONDS +
      now.getSeconds();

    let nextTime = Infinity;
    let nextRoutine = null;

    for (let day = 0; day &lt;= DAYS_IN_WEEK; day++) {
      const targetDay = (currentDay + day) % DAYS_IN_WEEK;
      const dayRoutines = activeRoutines
        .filter(r =&gt; r.frequency?.includes(targetDay))
        .sort((a, b) =&gt; a.time - b.time);

      for (const routine of dayRoutines) {
        if (day === 0 &amp;&amp; routine.time &lt;= currentTime) continue;

        const timestamp = calculateTimestamp(now, day, routine.time);
        if (timestamp &lt; nextTime) {
          nextRoutine = routine;
          nextTime = timestamp;
        }
      }

      if (nextRoutine &amp;&amp; day === 0) break;
    }

    return nextRoutine ? nextTime : null;
  }

  return {
    init,
    load,
    save,
    getAll,
    getById,
    add,
    update,
    removeById,
    removeByCategory,
    findNextTimestamp
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act43" ve="7">
			<code>410</code>
			<label>CategoryService.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/categories/services/CategoryService.js</Str>
			<Str sr="arg1" ve="3">const CategoryService = (() =&gt; {
  let categories = [];

  function getById(id) {
    return categories.find(c =&gt; c.id === id) || null;
  }

  function getAll() {
    return [...categories];
  }

  function add(category) {
    const newCategory = {
      ...category,
      id: Date.now().toString()
    };
    categories.push(newCategory);
    save();
    EventBus.emit("data:category:changed");
  }

  function update(id, data) {
    const index = categories.findIndex(c =&gt; c.id === id);
    if (index === -1) return;

    categories[index] = { ...categories[index], ...data };
    save();
    EventBus.emit("data:category:changed");
  }

  function remove(id) {
    categories = categories.filter(c =&gt; c.id !== id);
    save();
    EventBus.emit("data:category:changed");
  }

  function load() {
    const stored = ENV.getCategories();
    categories = stored ? JSON.parse(stored) : DEFAULT_CATEGORIES;
    if (!stored) save();
  }

  function save() {
    const data = JSON.stringify(categories, null, 2);
    ENV.saveCategories(data);
  }

  function init() {
    load();
  }

  return {
    init,
    load,
    getAll,
    add,
    update,
    remove,
    save,
    getById
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act44" ve="7">
			<code>410</code>
			<label>CategoryRenderer.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/categories/components/CategoryRenderer.js</Str>
			<Str sr="arg1" ve="3">const CategoryRenderer = (() =&gt; {
  const ALL_CATEGORY = {
    id: "all",
    name: "category_all",
    color: "#9CA3AF"
  };

  const elements = {
    btns: DOM.$("#category-buttons"),
    addBtn: DOM.$("#add-category-btn")
  };

  let selectedId = "all";

  function getCount(categoryId) {
    const routines = RoutineService.getAll();
    return categoryId === "all"
      ? routines.length
      : routines.filter(r =&gt; r.categoryId === categoryId).length;
  }

  function createBtn(category) {
    const btn = document.createElement("button");
    const count = getCount(category.id);
    const isActive = selectedId === category.id;

    btn.className = `category-button ${isActive ? "active" : ""}`;
    btn.style = `--category-color: ${category.color}`;
    btn.dataset.id = category.id;
    btn.innerHTML = `
      &lt;span class="category-name"&gt;${I18n.get(category.name)}&lt;/span&gt;
      &lt;div class="category-count badge"&gt;${count}&lt;/div&gt;`;

    return btn;
  }

  function updateActive(categoryId) {
    const btns = DOM.$$(".category-button", elements.btns);
    btns.forEach(btn =&gt; {
      const isSelected = btn.dataset.id === categoryId;
      btn.classList.toggle("active", isSelected);
    });
  }

  function handleClick(e) {
    const btn = e.target.closest(".category-button");
    if (!btn) return;

    selectedId = btn.dataset.id;
    updateActive(selectedId);
    RoutineFilter.setState("currentCategoryFilter", selectedId);
  }

  function handleCreate() {
    CategoryModal.open();
  }

  function getSelected() {
    return selectedId;
  }

  const handlers = {
    click: handleClick,
    create: handleCreate
  };

  function bindEvents() {
    const bindings = [
      [elements.btns, "click", handlers.click],
      [elements.addBtn, "click", handlers.create]
    ];
    bindings.forEach(([el, event, handler]) =&gt;
      el.addEventListener(event, handler)
    );

    const eventNames = [
      "data:category:changed",
      "routine:deleted",
      "routine:updated",
      "routine:added"
    ];
    eventNames.forEach(event =&gt; EventBus.on(event, render));
  }

  function render() {
    const categories = CategoryService.getAll();
    categories.unshift(ALL_CATEGORY);
    const buttons = categories.map(createBtn);

    elements.btns.innerHTML = "";
    elements.btns.append(...buttons);
  }

  function init() {
    render();
    bindEvents();
  }

  return {
    init,
    getSelected,
    updateActive
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act45" ve="7">
			<code>410</code>
			<label>RoutineRenderer.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/routine/components/RoutineRenderer.js</Str>
			<Str sr="arg1" ve="3">const RoutineRenderUtils = (() =&gt; {
  const PRIORITY_CONFIG = {
    low: { className: "priority-low", icon: "üí°" },
    medium: { className: "priority-medium", icon: "‚ö°" },
    high: { className: "priority-high", icon: "üî•" }
  };

  function getPriorityConfig(priority) {
    return PRIORITY_CONFIG[priority];
  }

  function createActionBtn(action, iconName, className) {
    return `&lt;button class="button ${className}" data-action="${action}"&gt;
        ${Icons.getIcon(iconName)}
      &lt;/button&gt;`;
  }

  function createDayTags(frequency) {
    const tags = frequency.map(
      day =&gt; `&lt;span class="day-tag"&gt;${Utils.getDayName(day)}&lt;/span&gt;`
    );
    return tags.join("");
  }

  function createCommand(command) {
    return command
      ? `&lt;div class="card-command"&gt;
        ${Icons.getIcon("terminal")}
        &lt;code&gt;${command}&lt;/code&gt;
      &lt;/div&gt;`
      : "";
  }

  function createCardHTML(routine) {
    const { className, icon } = getPriorityConfig(routine.priority);
    const label = I18n.get(className.replace("-", "_"));

    return `&lt;header class="card-header"&gt;
        &lt;h3 class="card-title"&gt;${routine.title}&lt;/h3&gt;
        &lt;span class="priority-badge ${className}"&gt;${icon} ${label}&lt;/span&gt;
      &lt;/header&gt;
      
      &lt;div class="card-body"&gt;
        &lt;p class="card-description"&gt;${routine.description}&lt;/p&gt;
        
        &lt;time class="card-time"&gt;
          ${Icons.getIcon("clock")}
          &lt;span&gt;${Utils.secondsToTime(routine.time)}&lt;/span&gt;
        &lt;/time&gt;
        
        ${createCommand(routine.command)}
        
        &lt;div class="card-days"&gt;
          ${Icons.getIcon("calendar")}
          ${createDayTags(routine.frequency)}
        &lt;/div&gt;
      &lt;/div&gt;
      
      &lt;footer class="card-footer"&gt;
        &lt;div class="card-actions"&gt;
          ${createActionBtn(
            "toggle",
            routine.active ? "power" : "power-off",
            "routine-toggle-btn"
          )}
          ${createActionBtn("edit", "edit", "routine-edit-btn")}
          ${createActionBtn("delete", "trash2", "delete-btn")}
        &lt;/div&gt;
      &lt;/footer&gt;`;
  }

  function getCardClass(routine) {
    return `routine-card ${!routine.active ? "inactive" : ""}`;
  }

  function clearGrid(elements) {
    elements.grid.innerHTML = "";
  }

  function removeListeners(el) {
    const newEl = el.cloneNode(true);
    el.parentNode.replaceChild(newEl, el);
    return newEl;
  }

  function setupFilterEmpty(elements) {
    elements.emptyText.textContent = I18n.get("empty_state_text");
    elements.emptyBtn.innerHTML = Icons.getIcon("brush-cleaning");
    elements.emptyBtn.innerHTML += I18n.get("clear_filters_button");

    elements.emptyBtn = removeListeners(elements.emptyBtn);
    elements.emptyBtn.addEventListener("click", RoutineFilter.resetFilters);
  }

  function setupRoutinesEmpty(elements) {
    elements.emptyText.textContent = I18n.get("empty_routines_text");
    elements.emptyBtn.innerHTML = Icons.getIcon("calendar-plus");
    elements.emptyBtn.innerHTML += I18n.get("create_routine_button");

    elements.emptyBtn = removeListeners(elements.emptyBtn);
    elements.emptyBtn.addEventListener("click", () =&gt; RoutineModal.open());
  }

  function showEmpty(isFilter, elements) {
    if (isFilter) {
      setupFilterEmpty(elements);
    } else {
      setupRoutinesEmpty(elements);
    }
    elements.emptyState.classList.add("show");
  }

  function hideEmpty(elements) {
    elements.emptyState.classList.remove("show");
  }

  function formatDateTime(timestamp) {
    const date = new Date(timestamp * 1000);

    const time = date.toLocaleTimeString(ENV.langCode, {
      hour: "2-digit",
      minute: "2-digit",
      hour12: false
    });

    const dateStr = date.toLocaleDateString(ENV.langCode, {
      weekday: "long",
      day: "2-digit",
      month: "2-digit"
    });

    return `${dateStr} - ${time}`;
  }

  function showNext(formatted, elements) {
    elements.nextText.textContent = formatted;
    elements.nextContainer.style.display = "block";
  }

  function hideNext(elements) {
    elements.nextContainer.style.display = "none";
  }

  return {
    createCardHTML,
    createDayTags,
    createActionBtn,
    getCardClass,
    clearGrid,
    showEmpty,
    hideEmpty,
    formatDateTime,
    showNext,
    hideNext
  };
})();

const RoutineRenderer = (() =&gt; {
  const PAGE_SIZE = 8;
  const THRESHOLD_PX = 200;

  const elements = {
    grid: DOM.$("#routines-grid"),
    emptyState: DOM.$("#empty-state"),
    emptyText: DOM.$("#empty-state p"),
    emptyBtn: DOM.$("#empty-state button"),
    nextContainer: DOM.$("#next-routine"),
    nextText: DOM.$("#next-routine-text"),
    appContainer: DOM.$("#app-container")
  };

  let paginationManager = null;

  function createCard(routine) {
    const card = document.createElement("article");
    card.className = RoutineRenderUtils.getCardClass(routine);
    card.dataset.id = routine.id;
    card.innerHTML = RoutineRenderUtils.createCardHTML(routine);
    return card;
  }

  function appendCards(routines) {
    const cards = routines.map(createCard);
    elements.grid.append(...cards);
  }

  function renderCards(routines, isFilter) {
    if (routines.length &gt; 0) {
      RoutineRenderUtils.hideEmpty(elements);
      paginationManager.load(routines);
    } else {
      RoutineRenderUtils.showEmpty(isFilter, elements);
    }
  }

  function renderRoutines() {
    const routines = RoutineService.getAll();
    const filtered = RoutineFilter.filterRoutines(routines);
    const isFilter = RoutineFilter.isAnyActive();

    RoutineRenderUtils.clearGrid(elements);
    renderCards(filtered, isFilter);
  }

  function updateNext() {
    const timestamp = RoutineService.findNextTimestamp();

    if (timestamp) {
      const formatted = RoutineRenderUtils.formatDateTime(timestamp);
      RoutineRenderUtils.showNext(formatted, elements);
      TimeService.setNext(timestamp);
    } else {
      RoutineRenderUtils.hideNext(elements);
    }
  }

  function remove(ids) {
    ids.forEach(id =&gt; {
      const card = DOM.$(`[data-id="${id}"]`);
      if (card) card.remove();
    });

    if (elements.grid.children.length === 0) {
      const isFilter = RoutineFilter.isAnyActive();
      RoutineRenderUtils.showEmpty(isFilter, elements);
    }
  }

  function update(id, routine) {
    const card = DOM.$(`[data-id="${id}"]`);
    if (!card) return;

    card.className = RoutineRenderUtils.getCardClass(routine);
    card.innerHTML = RoutineRenderUtils.createCardHTML(routine);
  }

  function createPagination() {
    paginationManager = PaginationManager.create({
      scrollElement: elements.appContainer,
      pageSize: PAGE_SIZE,
      thresholdPx: THRESHOLD_PX,
      renderAppend: appendCards
    });
  }

  function bindEvents() {
    EventBus.on("routine:updated", update);
    EventBus.on("routine:deleted", remove);

    ["routine:added", "filter:changed"].forEach(event =&gt;
      EventBus.on(event, renderRoutines)
    );
    ["routine:added", "routine:updated", "routine:deleted"].forEach(event =&gt;
      EventBus.on(event, updateNext)
    );
  }

  function init() {
    createPagination();
    updateNext();
    renderRoutines();
    bindEvents();
  }

  return {
    init
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act46" ve="7">
			<code>410</code>
			<label>RoutineFilter.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/routine/services/RoutineFilter.js</Str>
			<Str sr="arg1" ve="3">const RoutineFilterUtils = (() =&gt; {
  const FILTER_CONFIG = {
    search: {
      stateKey: "currentSearchFilter",
      processor: value =&gt; value.toLowerCase().trim()
    },
    status: {
      stateKey: "currentStatusFilter",
      processor: value =&gt; value
    },
    priority: {
      stateKey: "currentPriorityFilter",
      processor: value =&gt; value
    },
    day: {
      stateKey: "currentDayFilter",
      processor: value =&gt; value
    },
    command: {
      stateKey: "currentCommandFilter",
      processor: value =&gt; value
    }
  };

  const DEFAULT_VALUES = {
    statusFilter: "all",
    priorityFilter: "all",
    dayFilter: "all",
    searchFilter: "",
    commandFilter: "all"
  };

  const STATUS_MAP = {
    active: r =&gt; r.active,
    inactive: r =&gt; !r.active,
    pending: r =&gt; r.status === "pending"
  };

  const FILTER_STRATEGIES = {
    status: (routine, value) =&gt; {
      if (value === "all") return true;
      const handler = STATUS_MAP[value];
      return handler ? handler(routine) : false;
    },
    priority: (routine, value) =&gt; value === "all" || routine.priority === value,
    day: (routine, value) =&gt;
      value === "all" || routine.frequency.includes(parseInt(value)),
    search: (routine, term) =&gt; {
      if (!term) return true;
      const text = `${routine.title.toLowerCase()} ${routine.description.toLowerCase()}`;
      return text.includes(term);
    },
    command: (routine, value) =&gt;
      value === "all" || routine.command.startsWith(value),
    category: (routine, value) =&gt;
      value === "all" || routine.categoryId === value
  };

  function resetStates() {
    RoutineFilter.setState({
      currentStatusFilter: "all",
      currentPriorityFilter: "all",
      currentDayFilter: "all",
      currentSearchFilter: "",
      currentCommandFilter: "all"
    });
  }

  function processValue(type, value) {
    const config = FILTER_CONFIG[type];
    return config ? config.processor(value) : value;
  }

  function updateState(key, value) {
    RoutineFilter.setState(key, value);
  }

  function handleChange(type, value) {
    const config = FILTER_CONFIG[type];
    if (!config) return;

    const processed = processValue(type, value);
    updateState(config.stateKey, processed);
  }

  function createHandler(type) {
    return e =&gt; handleChange(type, e.target.value);
  }

  function toggleAdvanced(bar) {
    const show = !RoutineFilter.getState("showAdvancedFilters");
    RoutineFilter.setState("showAdvancedFilters", show);
    bar.classList.toggle("extended", show);
  }

  function isOutside(target, bar) {
    return !bar.contains(target);
  }

  function resetDOM(elements) {
    const entries = Object.entries(DEFAULT_VALUES);
    entries.forEach(([key, value]) =&gt; {
      elements[key].value = value;
    });
  }

  function sortByTime(routines) {
    return [...routines].sort((a, b) =&gt; a.time - b.time);
  }

  function getValues(state) {
    return {
      status: state.currentStatusFilter,
      priority: state.currentPriorityFilter,
      day: state.currentDayFilter,
      search: state.currentSearchFilter,
      command: state.currentCommandFilter,
      category: state.currentCategoryFilter
    };
  }

  function applyFilters(routines, values) {
    return routines.filter(routine =&gt;
      Object.entries(FILTER_STRATEGIES).every(([type, strategy]) =&gt;
        strategy(routine, values[type])
      )
    );
  }

  function createOption(command) {
    const element = document.createElement("option");
    element.value = command;
    element.textContent = command;
    return element;
  }

  function getBaseCommands(routines) {
    return routines.reduce((acc, routine) =&gt; {
      const baseCommand = routine.command.split(" ")[0];
      if (!acc.includes(baseCommand)) {
        acc.push(baseCommand);
      }
      return acc;
    }, []);
  }

  function populateCommandFilter(elements) {
    const routines = RoutineService.getAll();
    const commands = getBaseCommands(routines);

    commands.forEach(command =&gt; {
      const option = createOption(command);
      elements.commandFilter.appendChild(option);
    });
  }

  return {
    resetStates,
    createHandler,
    toggleAdvanced,
    isOutside,
    resetDOM,
    sortByTime,
    getValues,
    applyFilters,
    populateCommandFilter
  };
})();

const RoutineFilter = (() =&gt; {
  const elements = {
    filtersBar: DOM.$("#filters-bar"),
    toggleBtn: DOM.$("#toggle-filters-btn"),
    searchFilter: DOM.$("#search-filter"),
    statusFilter: DOM.$("#status-filter"),
    priorityFilter: DOM.$("#priority-filter"),
    dayFilter: DOM.$("#day-filter"),
    commandFilter: DOM.$("#command-filter")
  };

  let state = {
    showAdvancedFilters: false,
    currentStatusFilter: "all",
    currentPriorityFilter: "all",
    currentDayFilter: "all",
    currentSearchFilter: "",
    currentCommandFilter: "all",
    currentCategoryFilter: "all"
  };

  function getState(key) {
    return key ? state[key] : state;
  }

  function setState(key, value) {
    if (typeof key === "object") {
      state = { ...state, ...key };
    } else {
      state[key] = value;
    }

    if (key !== "showAdvancedFilters") {
      EventBus.emit("filter:changed");
    }
  }

  function handleToggle() {
    RoutineFilterUtils.toggleAdvanced(elements.filtersBar);
  }

  function handleOutside(e) {
    const open = getState("showAdvancedFilters");
    if (RoutineFilterUtils.isOutside(e.target, elements.filtersBar) &amp;&amp; open) {
      handleToggle();
    }
  }

  function resetFilters() {
    RoutineFilterUtils.resetDOM(elements);
    RoutineFilterUtils.resetStates();
  }

  function filterRoutines(routines) {
    const state = getState();
    const values = RoutineFilterUtils.getValues(state);
    const filtered = RoutineFilterUtils.applyFilters(routines, values);
    return RoutineFilterUtils.sortByTime(filtered);
  }

  function isAnyActive() {
    const state = getState();
    const values = RoutineFilterUtils.getValues(state);

    return (
      values.status !== "all" ||
      values.priority !== "all" ||
      values.day !== "all" ||
      values.search !== ""
    );
  }

  const handlers = {
    search: RoutineFilterUtils.createHandler("search"),
    status: RoutineFilterUtils.createHandler("status"),
    priority: RoutineFilterUtils.createHandler("priority"),
    command: RoutineFilterUtils.createHandler("command"),
    day: RoutineFilterUtils.createHandler("day"),
    toggle: handleToggle,
    outside: handleOutside,
    reset: resetFilters
  };

  function bindEvents() {
    const events = [
      [elements.toggleBtn, "click", handlers.toggle],
      [elements.statusFilter, "change", handlers.status],
      [elements.priorityFilter, "change", handlers.priority],
      [elements.dayFilter, "change", handlers.day],
      [elements.searchFilter, "input", handlers.search],
      [elements.commandFilter, "change", handlers.command],
      [document, "click", handlers.outside]
    ];

    events.forEach(([el, event, handler]) =&gt;
      el.addEventListener(event, handler)
    );
  }

  function init() {
    RoutineFilterUtils.populateCommandFilter(elements);
    bindEvents();
  }

  return {
    init,
    resetFilters,
    filterRoutines,
    isAnyActive,
    getState,
    setState
  };
})();</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act47" ve="7">
			<code>410</code>
			<label>CommandDropdown.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/routine/components/CommandDropdown.js</Str>
			<Str sr="arg1" ve="3">const CommandUtils = (() =&gt; {
  const SUGGESTIONS = [
    {
      cmd: "/open [app]",
      desc: "command_open_description",
      icon: "rocket"
    },
    {
      cmd: "/close [app]",
      desc: "command_close_description",
      icon: "circle-stop"
    },
    {
      cmd: "/wifi [on/off]",
      desc: "command_wifi_description",
      icon: "wifi"
    },
    {
      cmd: "/mobile_data [on/off]",
      desc: "command_mobile_description",
      icon: "signal"
    },
    {
      cmd: "/bluetooth [on/off]",
      desc: "command_bluetooth_description",
      icon: "bluetooth"
    },
    {
      cmd: "/airplane [on/off]",
      desc: "command_airplane_description",
      icon: "plane"
    },
    {
      cmd: "/lockscreen",
      desc: "command_lockscreen_description",
      icon: "lock-screen"
    },
    { cmd: "/run_task [task]", desc: "command_task_description", icon: "play" }
  ];

  function createSuggestionCommand(command) {
    return command.replace(
      /\[([^\]]+)\]/g,
      '&lt;span class="suggestion-command-value"&gt;[$1]&lt;/span&gt;'
    );
  }

  function createCard({ cmd, desc, icon }) {
    const description = I18n.get(desc);

    return `&lt;div class="suggestion-item" data-command="${cmd}"&gt;
        ${Icons.getIcon(icon)}
        &lt;div class="suggestion-content"&gt;
          &lt;div class="suggestion-command"&gt;
           ${createSuggestionCommand(cmd)}
          &lt;/div&gt;
          &lt;div class="suggestion-description"&gt;${description}&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;`;
  }

  function createItems(filteredSuggestions = SUGGESTIONS) {
    return filteredSuggestions.map(createCard).join("");
  }

  function filterSuggestions(input) {
    if (!input) return SUGGESTIONS;

    const searchTerm = input.toLowerCase();
    return SUGGESTIONS.filter(suggestion =&gt;
      suggestion.cmd.toLowerCase().includes(searchTerm.substring(1))
    );
  }

  return {
    createItems,
    filterSuggestions
  };
})();

const CommandDropdown = (() =&gt; {
  let visible = false;

  const elements = {
    dropdown: DOM.$("#command-dropdown")
  };

  function getVisibleDropdown() {
    return visible;
  }

  function open(filteredSuggestions) {
    visible = true;
    render(filteredSuggestions);
    Modal.show(elements.dropdown);
  }

  function close() {
    visible = false;
    Modal.hide(elements.dropdown);
  }

  function handleSuggestion(e) {
    const item = e.target.closest(".suggestion-item");
    if (!item) return;

    const { command } = item.dataset;
    const baseCommand = command.split(" ")[0];

    if (baseCommand === "/open" || baseCommand === "/close") {
      AppPickerModal.open(baseCommand);
      close();
      return;
    }

    if (baseCommand === "/run_task") {
      TaskPickerModal.open(baseCommand);
      close();
      return;
    }

    RoutineForm.setCommandInput(`${baseCommand} `);
    close();
  }

  function handleOutside(e) {
    if (!elements.dropdown.contains(e.target) &amp;&amp; visible) {
      close();
    }
  }

  const handlers = {
    suggestion: handleSuggestion,
    outside: handleOutside
  };

  function bindEvents() {
    const bindings = [
      [elements.dropdown, "click", handlers.suggestion],
      [document, "click", handlers.outside]
    ];

    bindings.forEach(([el, event, handler]) =&gt;
      el.addEventListener(event, handler)
    );
  }

  function render(filteredSuggestions) {
    elements.dropdown.innerHTML = CommandUtils.createItems(filteredSuggestions);
  }

  function init() {
    render();
    bindEvents();
  }

  return {
    init,
    open,
    close,
    getVisibleDropdown
  };
})();</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act48" ve="7">
			<code>410</code>
			<label>RoutineActions.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/routine/services/RoutineActions.js</Str>
			<Str sr="arg1" ve="3">const RoutineActions = (() =&gt; {
  const elements = {
    grid: DOM.$("#routines-grid"),
    addBtn: DOM.$("#add-routine-btn")
  };

  const ACTION_MAP = {
    toggle: toggleRoutine,
    edit: editRoutine,
    delete: deleteRoutine
  };

  function toggleRoutine(routineId) {
    const routine = RoutineService.getById(routineId);
    const active = !routine.active;

    RoutineService.update(routineId, { active });

    const key = active
      ? "toast_routine_activated"
      : "toast_routine_deactivated";
    Toast.show("success", key);
  }

  function editRoutine(routineId) {
    const routine = RoutineService.getById(routineId);
    RoutineModal.open(routine);
  }

  function deleteRoutine(routineId) {
    DeleteRoutineModal.open(routineId);
  }

  function executeAction(action, id) {
    const handler = ACTION_MAP[action];
    if (handler) handler(id);
  }

  function getIdFromEl(el) {
    const card = el.closest(".routine-card");
    const id = card?.dataset.id;
    return id ? Number(id) : null;
  }

  function handleCard(e) {
    const action = e.target.getAttribute("data-action");
    if (!action) return;

    const id = getIdFromEl(e.target);
    executeAction(action, id);
  }

  function handleAdd() {
    RoutineModal.open();
  }

  const handlers = {
    card: handleCard,
    add: handleAdd
  };

  function bindEvents() {
    const bindings = [
      [elements.grid, "click", handlers.card],
      [elements.addBtn, "click", handlers.add]
    ];

    bindings.forEach(([el, event, handler]) =&gt;
      el.addEventListener(event, handler)
    );
  }

  function init() {
    bindEvents();
  }

  return {
    init
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act49" ve="7">
			<code>410</code>
			<label>CategoryForm.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/categories/components/CategoryForm.js</Str>
			<Str sr="arg1" ve="3">const CategoryFormUtils = (() =&gt; {
  function validateName(name, elements) {
    if (!name) {
      Toast.show("error", I18n.get("category_name_required"));
      elements.nameInput.focus();
      return false;
    }
    return true;
  }

  function processCategory(data, state) {
    if (state.isEditing) {
      CategoryService.update(state.editingId, data);
      Toast.show("success", I18n.get("category_updated"));
    } else {
      CategoryService.add(data);
      Toast.show("success", I18n.get("category_added"));
    }
  }

  function selectColor(color, state, elements) {
    state.selectedColor = color;
    elements.colorInput.value = color;

    const items = DOM.$$(".color-item");
    items.forEach(item =&gt; {
      item.classList.toggle("selected", item.dataset.color === color);
    });
  }

  return {
    validateName,
    processCategory,
    selectColor
  };
})();

const CategoryForm = (() =&gt; {
  const DEFAULT_COLOR = "#c084fc";
  const COLORS = [
    "#c084fc",
    "#a855f7",
    "#9333ea",
    "#7c3aed",
    "#8b5cf6",
    "#4f46e5",
    "#3b82f6",
    "#2563eb",
    "#1d4ed8",
    "#60a5fa",
    "#1e40af",
    "#06b6d4",
    "#0891b2",
    "#0e7490",
    "#0f766e",
    "#14b8a6",
    "#10b981",
    "#059669",
    "#16a34a",
    "#15803d",
    "#65a30d",
    "#eab308",
    "#f59e0b",
    "#d97706",
    "#ea580c",
    "#dc2626",
    "#ef4444",
    "#b91c1c",
    "#e11d48",
    "#ec4899",
    "#be185d",
    "#6b7280",
    "#4b5563",
    "#374151"
  ];

  const elements = {
    form: DOM.$("#category-form"),
    nameInput: DOM.$("#category-name"),
    colorPicker: DOM.$("#color-picker"),
    colorInput: DOM.$("#category-color"),
    saveBtn: DOM.$("#save-category")
  };

  const state = {
    isEditing: false,
    editingId: null,
    selectedColor: DEFAULT_COLOR
  };

  function setupCreate() {
    elements.form.reset();
    state.isEditing = false;
    state.editingId = null;
    CategoryFormUtils.selectColor(DEFAULT_COLOR, state, elements);
    elements.saveBtn.innerHTML = `${Icons.getIcon("plus")} ${I18n.get(
      "category_add_button"
    )}`;
  }

  function setupEdit(category) {
    elements.nameInput.value = I18n.get(category.name);
    CategoryFormUtils.selectColor(category.color, state, elements);
    state.isEditing = true;
    state.editingId = category.id;
    elements.saveBtn.innerHTML = `${Icons.getIcon("save")} ${I18n.get(
      "category_save_button"
    )}`;
  }

  function handleSubmit(e) {
    e.preventDefault();

    const name = elements.nameInput.value.trim();
    if (!CategoryFormUtils.validateName(name, elements)) return;

    const data = { name, color: state.selectedColor };
    CategoryFormUtils.processCategory(data, state);
    setupCreate();
  }

  function handleSelectColor(e) {
    const color = e.target.dataset.color;
    if (color) CategoryFormUtils.selectColor(color, state, elements);
  }

  function render() {
    const items = COLORS.map(
      (color, i) =&gt;
        `&lt;div class="color-item ${i === 0 ? "selected" : ""}" 
           style="background: ${color}" 
           data-color="${color}"
           title="${color}"&gt;
      &lt;/div&gt;`
    );
    elements.colorPicker.innerHTML = items.join("");
  }

  const handlers = {
    submit: handleSubmit,
    selectColor: handleSelectColor
  };

  function bindEvents() {
    const bindings = [
      [elements.form, "submit", handlers.submit],
      [elements.colorPicker, "click", handlers.selectColor]
    ];

    bindings.forEach(([el, event, handler]) =&gt;
      el.addEventListener(event, handler)
    );
  }

  function init() {
    render();
    bindEvents();
  }

  return {
    init,
    setupCreate,
    setupEdit
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act50" ve="7">
			<code>410</code>
			<label>CategoryModal.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/categories/components/CategoryModal.js</Str>
			<Str sr="arg1" ve="3">const CategoryModalUtils = (() =&gt; {
  function updateCount(elements) {
    elements.count.textContent = CategoryService.getAll().length;
  }

  function createCategoryItem(category) {
    const item = document.createElement("div");
    item.className = "category-item";
    item.dataset.id = category.id;
    item.innerHTML = `
      &lt;div class="category-info"&gt;
        &lt;div class="category-color" style="background-color: ${
          category.color
        }"&gt;&lt;/div&gt;
        &lt;span class="category-name"&gt;${I18n.get(category.name)}&lt;/span&gt;
      &lt;/div&gt;
      &lt;div class="category-actions"&gt;
        &lt;button class="button routine-edit-btn" data-action="edit"&gt;
          ${Icons.getIcon("edit")}
        &lt;/button&gt;
        &lt;button class="button delete-btn" data-action="delete"&gt;
          ${Icons.getIcon("trash2")}
        &lt;/button&gt;
      &lt;/div&gt;
    `;

    return item;
  }

  function confirmDelete(categoryName) {
    const confirmMsg = I18n.get("category_confirm_delete").replace(
      "{categoryName}",
      I18n.get(categoryName)
    );
    return confirm(confirmMsg);
  }

  function deleteCategory(id) {
    CategoryService.remove(id);
    RoutineService.removeByCategory(id);

    const currentCategoryFilter = RoutineFilter.getState(
      "currentCategoryFilter"
    );
    if (currentCategoryFilter === id) {
      RoutineFilter.setState("currentCategoryFilter", "all");
      CategoryRenderer.updateActive("all");
    }

    Toast.show("success", I18n.get("category_deleted"));
  }

  return {
    updateCount,
    createCategoryItem,
    confirmDelete,
    deleteCategory
  };
})();

const CategoryModal = (() =&gt; {
  const DEFAULT_CATEGORY_ID = "general";

  const elements = {
    modal: DOM.$("#category-modal"),
    count: DOM.$("#categories-count"),
    grid: DOM.$("#categories-grid"),
    closeBtn: DOM.$("#categories-modal-close"),
    overlay: DOM.$("#category-modal .modal-overlay")
  };

  function open() {
    CategoryForm.setupCreate();
    Modal.show(elements.modal);
  }

  function close() {
    Modal.hide(elements.modal);
  }

  function handleEdit(id) {
    const category = CategoryService.getById(id);
    if (category) CategoryForm.setupEdit(category);
  }

  function handleDelete(id) {
    if (id === DEFAULT_CATEGORY_ID) {
      Toast.show("error", I18n.get("category_cannot_delete_default"));
      return;
    }

    const category = CategoryService.getById(id);
    if (!CategoryModalUtils.confirmDelete(category.name)) return;

    CategoryModalUtils.deleteCategory(id);
  }

  function handleGridClick(e) {
    const action = e.target.dataset.action;
    if (!action) return;

    const item = e.target.closest(".category-item");
    const id = item?.dataset.id;
    if (!id) return;

    if (action === "edit") {
      handleEdit(id);
    } else {
      handleDelete(id);
    }
  }

  function render() {
    const categories = CategoryService.getAll();
    elements.grid.innerHTML = "";

    const categoryItems = categories.map(CategoryModalUtils.createCategoryItem);
    elements.grid.append(...categoryItems);
  }

  function updateAll() {
    render();
    CategoryModalUtils.updateCount(elements);
  }

  const handlers = {
    close: close,
    overlay: close,
    grid: handleGridClick
  };

  function bindEvents() {
    const bindings = [
      [elements.closeBtn, "click", handlers.close],
      [elements.overlay, "click", handlers.overlay],
      [elements.grid, "click", handlers.grid]
    ];

    bindings.forEach(([el, event, handler]) =&gt;
      el.addEventListener(event, handler)
    );

    EventBus.on("data:category:changed", updateAll);
  }

  function init() {
    CategoryForm.init();
    updateAll();
    bindEvents();
  }

  return {
    init,
    open,
    close
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act51" ve="7">
			<code>410</code>
			<label>RoutineForm.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/routine/components/RoutineForm.js</Str>
			<Str sr="arg1" ve="3">const RoutineFormUtils = (() =&gt; {
  const ERROR_IDS = [
    "title-error",
    "description-error",
    "priority-error",
    "time-error",
    "days-error",
    "command-error"
  ];

  const REQUIRED_FIELDS = {
    title: "form_error_title_required",
    description: "form_error_description_required",
    time: "form_error_time_required"
  };

  function getValue(el) {
    return el.value.trim();
  }

  function getFormData(elements) {
    return {
      title: getValue(elements.titleInput),
      description: getValue(elements.descriptionInput),
      priority: getValue(elements.prioritySelect),
      time: Utils.timeToSeconds(getValue(elements.timeInput)),
      selectedDays: RoutineModal.getState("selectedDays"),
      command: getValue(elements.commandInput),
      categoryId: getValue(elements.categorySelect)
    };
  }

  function showError(id, message) {
    const el = document.getElementById(id);
    if (el) el.textContent = message;
  }

  function validateField(field, value, errors) {
    if (!value) {
      showError(`${field}-error`, I18n.get(REQUIRED_FIELDS[field]));
      errors.push(field);
    }
  }

  function validateCommand(command, errors) {
    if (!command) return;

    const isValid = command.startsWith("/");
    if (!isValid) {
      showError("command-error", I18n.get("form_error_command_invalid"));
      errors.push("command");
    }
  }

  function validateDays(days, errors) {
    if (days.length === 0) {
      showError("days-error", I18n.get("form_error_days_required"));
      errors.push("days");
    }
  }

  function validateForm(data) {
    const errors = [];

    validateField("title", data.title, errors);
    validateField("description", data.description, errors);
    validateCommand(data.command, errors);
    validateField("time", data.time, errors);
    validateDays(data.selectedDays, errors);

    return errors.length === 0;
  }

  function createData(data) {
    const frequency = [...data.selectedDays.sort()];
    return {
      title: data.title,
      description: data.description,
      command: data.command,
      priority: data.priority,
      time: data.time,
      frequency,
      categoryId: data.categoryId
    };
  }

  function populateFields(routine, elements) {
    const fieldMappings = [
      [elements.titleInput, routine.title],
      [elements.descriptionInput, routine.description],
      [elements.commandInput, routine.command],
      [elements.categorySelect, routine.categoryId],
      [elements.prioritySelect, routine.priority],
      [elements.timeInput, Utils.secondsToTime(routine.time)]
    ];

    fieldMappings.forEach(([field, value]) =&gt; (field.value = value));
  }

  function updateDays(frequency, btns) {
    btns.forEach(btn =&gt; {
      const day = parseInt(btn.dataset.day);
      btn.classList.toggle("selected", frequency.includes(day));
    });
  }

  function clearErrors() {
    ERROR_IDS.forEach(id =&gt; {
      const el = document.getElementById(id);
      if (el) el.textContent = "";
    });
  }

  function resetDays(btns) {
    btns.forEach(btn =&gt; btn.classList.remove("selected"));
  }

  function focusTitle(input) {
    requestAnimationFrame(() =&gt; input.focus());
  }

  return {
    getFormData,
    validateForm,
    createData,
    populateFields,
    updateDays,
    clearErrors,
    resetDays,
    focusTitle
  };
})();

const RoutineForm = (() =&gt; {
  const elements = {
    form: DOM.$("#routine-form"),
    titleInput: DOM.$("#title"),
    descriptionInput: DOM.$("#description"),
    commandInput: DOM.$("#command"),
    prioritySelect: DOM.$("#priority"),
    timeInput: DOM.$("#time"),
    daysContainer: DOM.$("#days-container"),
    dayBtns: DOM.$$(".day-button"),
    categorySelect: DOM.$("#category-select")
  };

  function handleEdit(data) {
    const id = RoutineModal.getState("routineToEdit");
    const original = RoutineService.getById(id);
    const oldCategoryId = original.categoryId;
    const newCategoryId = data.categoryId;

    RoutineService.update(id, data);

    const currentFilter = RoutineFilter.getState("currentCategoryFilter");
    if (currentFilter !== "all" &amp;&amp; newCategoryId !== oldCategoryId) {
      EventBus.emit("routine:deleted", [id]);
    }

    Toast.show("success", "toast_routine_updated");
  }

  function handleCreate(data) {
    const routine = {
      id: Date.now().toString(),
      ...data,
      active: true
    };
    RoutineService.add(routine);
    Toast.show("success", "toast_routine_created");
  }

  function handleCommandInput(event) {
    const { value } = event.target;
    const visible = CommandDropdown.getVisibleDropdown();

    if (value.startsWith("/")) {
      const suggestions = CommandUtils.filterSuggestions(value);
      suggestions.length &gt; 0
        ? CommandDropdown.open(suggestions)
        : CommandDropdown.close();
      return;
    }

    if (visible) CommandDropdown.close();
  }

  function setupEdit(routine) {
    RoutineFormUtils.populateFields(routine, elements);
    RoutineFormUtils.updateDays(routine.frequency, elements.dayBtns);
    RoutineFormUtils.clearErrors();
    RoutineFormUtils.focusTitle(elements.titleInput);
  }

  function updateDays(day, selected) {
    const days = RoutineModal.getState("selectedDays");
    const newDays = selected ? [...days, day] : days.filter(d =&gt; d !== day);
    RoutineModal.setState("selectedDays", newDays);
  }

  function setupCreate() {
    elements.form.reset();
    RoutineFormUtils.clearErrors();
    RoutineFormUtils.resetDays(elements.dayBtns);

    const selected = RoutineFilter.getState("currentCategoryFilter");
    if (selected !== "all") {
      elements.categorySelect.value = selected;
    }

    RoutineFormUtils.focusTitle(elements.titleInput);
  }

  function handleSubmit(e) {
    e.preventDefault();
    RoutineFormUtils.clearErrors();

    const formData = RoutineFormUtils.getFormData(elements);
    if (!RoutineFormUtils.validateForm(formData)) return;

    const data = RoutineFormUtils.createData(formData);
    if (RoutineModal.getState("isEditMode")) {
      handleEdit(data);
    } else {
      handleCreate(data);
    }
    RoutineModal.close();
  }

  function setCommandInput(command) {
    elements.commandInput.value = command;
    elements.commandInput.focus();
  }

  function toggleDay(e) {
    const day = parseInt(e.target.dataset.day);
    if (isNaN(day)) return;

    e.target.classList.toggle("selected");
    updateDays(day, e.target.classList.contains("selected"));
  }

  function populateCategorySelect() {
    const categories = CategoryService.getAll();
    elements.categorySelect.innerHTML = "";

    categories.forEach(category =&gt; {
      if (category.isVirtual) return;

      const option = document.createElement("option");
      option.value = category.id;
      option.textContent = I18n.get(category.name);
      elements.categorySelect.appendChild(option);
    });
  }

  const handlers = {
    submit: handleSubmit,
    input: handleCommandInput,
    toggle: toggleDay
  };

  function bindEvents() {
    const bindings = [
      [elements.form, "submit", handlers.submit],
      [elements.commandInput, "input", handlers.input],
      [elements.daysContainer, "click", handlers.toggle]
    ];

    bindings.forEach(([el, event, handler]) =&gt;
      el.addEventListener(event, handler)
    );

    EventBus.on("data:category:changed", populateCategorySelect);
  }

  function init() {
    CommandDropdown.init();
    populateCategorySelect();
    bindEvents();
  }

  return {
    init,
    setupEdit,
    setupCreate,
    setCommandInput
  };
})();</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act52" ve="7">
			<code>410</code>
			<label>RoutineModal.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/routine/components/RoutineModal.js</Str>
			<Str sr="arg1" ve="3">const RoutineModalUtils = (() =&gt; {
  function setCreateState() {
    RoutineModal.setState({
      selectedDays: [],
      isEditMode: false,
      routineToEdit: null
    });
  }

  function setEditState(routine) {
    RoutineModal.setState({
      selectedDays: [...routine.frequency],
      isEditMode: true,
      routineToEdit: routine.id
    });
  }

  function updateTexts(title, desc, btnContent, elements) {
    elements.title.textContent = title;
    elements.description.textContent = desc;
    elements.submitBtn.innerHTML = btnContent;
  }

  return {
    setCreateState,
    setEditState,
    updateTexts
  };
})();

const RoutineModal = (() =&gt; {
  const CONTENT_KEYS = {
    create: {
      title: "create_routine_title",
      subtitle: "create_routine_subtitle",
      button: "create_button",
      icon: "calendar-plus"
    },
    edit: {
      title: "edit_routine_title",
      subtitle: "edit_routine_subtitle",
      button: "update_button",
      icon: "calendar-sync"
    }
  };

  const elements = {
    modal: DOM.$("#routine-modal"),
    overlay: DOM.$("#routine-modal .modal-overlay"),
    title: DOM.$("#routine-modal .modal-title"),
    description: DOM.$("#routine-modal .modal-description"),
    cancelBtn: DOM.$("#cancel-routine"),
    submitBtn: DOM.$("#create-routine-btn")
  };

  let state = {
    selectedDays: [],
    isEditMode: false,
    routineToEdit: null
  };

  function getState(key) {
    return state[key];
  }

  function setState(key, value) {
    if (typeof key === "object") {
      state = { ...state, ...key };
      return;
    }
    state[key] = value;
  }

  function getContent(isEdit) {
    const mode = isEdit ? "edit" : "create";
    const config = CONTENT_KEYS[mode];

    return {
      title: I18n.get(config.title),
      subtitle: I18n.get(config.subtitle),
      submitButton: `${Icons.getIcon(config.icon)} ${I18n.get(config.button)}`
    };
  }

  function setupEdit(routine) {
    RoutineModalUtils.setEditState(routine);
    const { title, subtitle, submitButton } = getContent(true);
    RoutineModalUtils.updateTexts(title, subtitle, submitButton, elements);
    RoutineForm.setupEdit(routine);
  }

  function setupCreate() {
    RoutineModalUtils.setCreateState();
    const { title, subtitle, submitButton } = getContent(false);
    RoutineModalUtils.updateTexts(title, subtitle, submitButton, elements);
    RoutineForm.setupCreate();
  }

  function open(routine) {
    if (routine) {
      setupEdit(routine);
    } else {
      setupCreate();
    }

    Modal.show(elements.modal);
  }

  function close() {
    Modal.hide(elements.modal);
  }

  const handlers = {
    cancel: close,
    overlay: close
  };

  function bindEvents() {
    const bindings = [
      [elements.cancelBtn, "click", handlers.cancel],
      [elements.overlay, "click", handlers.overlay]
    ];

    bindings.forEach(([el, event, handler]) =&gt;
      el.addEventListener(event, handler)
    );
  }

  function init() {
    RoutineForm.init();
    bindEvents();
  }

  return {
    init,
    open,
    close,
    getState,
    setState
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act53" ve="7">
			<code>410</code>
			<label>DeleteRoutineModal.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/routine/components/DeleteRoutineModal.js</Str>
			<Str sr="arg1" ve="3">const DeleteRoutineModal = (() =&gt; {
  let routineId = null;

  const elements = {
    modal: DOM.$("#delete-routine-modal"),
    overlay: DOM.$("#delete-routine-modal .modal-overlay"),
    confirmBtn: DOM.$("#confirm-delete"),
    cancelBtn: DOM.$("#cancel-delete")
  };

  function open(id) {
    routineId = id;
    Modal.show(elements.modal);
  }

  function close() {
    routineId = null;
    Modal.hide(elements.modal);
  }

  function handleConfirm() {
    RoutineService.removeById(routineId);
    Toast.show("success", "toast_routine_deleted");
    close();
  }

  const handlers = {
    confirm: handleConfirm,
    cancel: close,
    overlay: close
  };

  function bindEvents() {
    const bindings = [
      [elements.cancelBtn, "click", handlers.cancel],
      [elements.confirmBtn, "click", handlers.confirm],
      [elements.overlay, "click", handlers.overlay]
    ];

    bindings.forEach(([el, event, handler]) =&gt;
      el.addEventListener(event, handler)
    );
  }

  function init() {
    bindEvents();
  }

  return {
    init,
    open,
    close
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act54" ve="7">
			<code>410</code>
			<label>AppPickerModal.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/routine/components/AppPickerModal.js</Str>
			<Str sr="arg1" ve="3">const AppPickerModal = (() =&gt; {
  const PAGE_SIZE = 15;
  const THRESHOLD_PX = 200;

  let paginationManager = null;
  let selectedCommand = "/open";

  const elements = {
    modal: DOM.$("#app-picker-modal"),
    overlay: DOM.$("#app-picker-modal .modal-overlay"),
    closeBtn: DOM.$("#apps-modal-close"),
    grid: DOM.$("#apps-grid")
  };

  function createCard({ name, pkg }) {
    const iconSrc =
      ENV.name === "web"
        ? `${ENV.iconPath}${pkg}.png`
        : `${ENV.iconPath}${pkg}`;

    return `&lt;div class="app-card" data-app="${name}"&gt;
      &lt;img src="${iconSrc}" class="app-icon" /&gt;
      &lt;p class="app-name"&gt;${name}&lt;/p&gt;
    &lt;/div&gt;`;
  }

  function createItems(apps) {
    return apps.map(createCard).join("");
  }

  function appendApps(apps) {
    elements.grid.insertAdjacentHTML("beforeend", createItems(apps));
  }

  function handleAppSelect(e) {
    const card = e.target.closest(".app-card");
    if (!card) return;

    RoutineForm.setCommandInput(`${selectedCommand} ${card.dataset.app}`);
    close();
  }

  function open(command) {
    selectedCommand = command || "/open";
    Modal.show(elements.modal);
  }

  function close() {
    Modal.hide(elements.modal);
  }

  const handlers = {
    appSelect: handleAppSelect,
    close: close,
    overlay: close
  };

  function bindEvents() {
    const bindings = [
      [elements.closeBtn, "click", handlers.close],
      [elements.overlay, "click", handlers.overlay],
      [elements.grid, "click", handlers.appSelect]
    ];

    bindings.forEach(([el, event, handler]) =&gt;
      el.addEventListener(event, handler)
    );
  }

  function render(data) {
    const apps = data || ENV.loadApps();
    elements.grid.innerHTML = "";

    paginationManager.load(apps);
  }

  function createPagination() {
    paginationManager = PaginationManager.create({
      scrollElement: elements.grid,
      pageSize: PAGE_SIZE,
      thresholdPx: THRESHOLD_PX,
      renderAppend: appendApps
    });
  }

  function init() {
    createPagination();
    render();
    bindEvents();
  }

  return {
    init,
    open,
    close,
    render
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act55" ve="7">
			<code>410</code>
			<label>TaskPickerModal.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/routine/components/TaskPickerModal.js</Str>
			<Str sr="arg1" ve="3">const TaskPickerModal = (() =&gt; {
  const PAGE_SIZE = 10;
  const THRESHOLD_PX = 200;
  let tasks = [];
  let filteredTasks = [];

  let paginationManager = null;
  let selectedCommand = "/run_task";

  const elements = {
    modal: DOM.$("#task-picker-modal"),
    overlay: DOM.$("#task-picker-modal .modal-overlay"),
    closeBtn: DOM.$("#tasks-modal-close"),
    grid: DOM.$("#tasks-grid"),
    searchInput: DOM.$("#task-search-input"),
    count: DOM.$("#tasks-count")
  };

  function updateCount() {
    elements.count.textContent = filteredTasks.length;
  }

  function createCard({ name }) {
    return `&lt;div class="task-card" data-task="${name}"&gt;
            &lt;p class="task-name"&gt;${name}&lt;/p&gt;
        &lt;/div&gt;`;
  }

  function createItems(tasks) {
    return tasks.map(task =&gt; createCard({ name: task })).join("");
  }

  function appendTasks(tasks) {
    elements.grid.insertAdjacentHTML("beforeend", createItems(tasks));
  }

  function handleTaskSelect(e) {
    const card = e.target.closest(".task-card");
    if (!card) return;

    RoutineForm.setCommandInput(`${selectedCommand} ${card.dataset.task}`);
    close();
  }

  function open(command) {
    selectedCommand = command || "/run_task";
    Modal.show(elements.modal);
  }

  function close() {
    Modal.hide(elements.modal);
  }

  function filterTasks() {
    const searchTerm = elements.searchInput.value.toLowerCase();

    if (searchTerm === "") {
      filteredTasks = [...tasks];
    } else {
      filteredTasks = tasks.filter(task =&gt;
        task.toLowerCase().includes(searchTerm)
      );
    }

    updateCount();
    render();
  }

  function updateAll() {
    updateCount();
    render();
  }

  const handlers = {
    taskSelect: handleTaskSelect,
    close: close,
    overlay: close,
    filter: filterTasks
  };

  function bindEvents() {
    const bindings = [
      [elements.closeBtn, "click", handlers.close],
      [elements.overlay, "click", handlers.overlay],
      [elements.grid, "click", handlers.taskSelect],
      [elements.searchInput, "input", handlers.filter]
    ];

    bindings.forEach(([el, event, handler]) =&gt;
      el.addEventListener(event, handler)
    );
  }

  function load(data) {
    tasks = data || ENV.loadTasks();
    filteredTasks = [...tasks];
  }

  function render() {
    const tasksToRender = filteredTasks;
    elements.grid.innerHTML = "";
    paginationManager.load(tasksToRender);
  }

  function createPagination() {
    paginationManager = PaginationManager.create({
      scrollElement: elements.grid,
      pageSize: PAGE_SIZE,
      thresholdPx: THRESHOLD_PX,
      renderAppend: appendTasks
    });
  }

  function init() {
    load();
    createPagination();
    updateAll();
    bindEvents();
  }

  return {
    init,
    open,
    load,
    updateAll
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act56" ve="7">
			<code>410</code>
			<label>SettingsService.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/settings/SettingsService.js</Str>
			<Str sr="arg1" ve="3">const SettingsService = (() =&gt; {
  const DEFAULT_SETTINGS = {
    voice: true,
    toast: true,
    vibrate: false
  };

  function save(settings) {
    ENV.saveSettings(JSON.stringify(settings, null, 2));
  }

  function load() {
    const stored = ENV.getSettings();

    if (!stored) {
      save(DEFAULT_SETTINGS);
      return DEFAULT_SETTINGS;
    }

    return JSON.parse(stored);
  }

  return {
    load,
    save
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act57" ve="7">
			<code>410</code>
			<label>SettingsModal.js</label>
			<Str sr="arg0" ve="3">%project_path/src/features/settings/SettingsModal.js</Str>
			<Str sr="arg1" ve="3">const SettingsModal = (() =&gt; {
  const elements = {
    btn: DOM.$("#settings-btn"),
    modal: DOM.$("#settings-modal"),
    closeBtn: DOM.$("#settings-modal-close"),
    overlay: DOM.$("#settings-modal .modal-overlay"),
    voiceToggle: DOM.$("#voice-toggle"),
    toastToggle: DOM.$("#toast-toggle"),
    vibrateToggle: DOM.$("#vibrate-toggle")
  };

  function getCurrent() {
    return {
      voice: elements.voiceToggle.checked,
      toast: elements.toastToggle.checked,
      vibrate: elements.vibrateToggle.checked
    };
  }

  function open() {
    Modal.show(elements.modal);
  }

  function close() {
    Modal.hide(elements.modal);
  }

  function handleChange() {
    const settings = getCurrent();
    SettingsService.save(settings);
  }

  const handlers = {
    change: handleChange,
    close: close,
    button: open,
    overlay: close
  };

  function bindEvents() {
    const bindings = [
      [elements.btn, "click", handlers.button],
      [elements.closeBtn, "click", handlers.close],
      [elements.modal, "change", handlers.change],
      [elements.overlay, "click", handlers.overlay]
    ];

    bindings.forEach(([el, event, handler]) =&gt;
      el.addEventListener(event, handler)
    );
  }

  function render() {
    const settings = SettingsService.load();
    elements.voiceToggle.checked = settings.voice;
    elements.toastToggle.checked = settings.toast;
    elements.vibrateToggle.checked = settings.vibrate;
  }

  function init() {
    render();
    bindEvents();
  }

  return {
    init,
    open,
    close
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act58" ve="7">
			<code>410</code>
			<label>EventBus.js</label>
			<Str sr="arg0" ve="3">%project_path/src/services/EventBus.js</Str>
			<Str sr="arg1" ve="3">const EventBus = (() =&gt; {
  const events = {};

  function on(event, listener) {
    if (!events[event]) {
      events[event] = [];
    }
    events[event].push(listener);
  }

  function emit(event, ...args) {
    if (!events[event]) {
      return;
    }
    events[event].forEach(listener =&gt; listener(...args));
  }

  return {
    on,
    emit
  };
})();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act59" ve="7">
			<code>410</code>
			<label>App.js</label>
			<Str sr="arg0" ve="3">%project_path/src/App.js</Str>
			<Str sr="arg1" ve="3">const App = (() =&gt; {
  async function init() {
    Icons.init();
    await I18n.init();
    RoutineService.init();
    CategoryService.init();
    CategoryRenderer.init();
    RoutineRenderer.init();
    TimeService.init();
    RoutineFilter.init();
    RoutineActions.init();

    SettingsModal.init();
    CategoryModal.init();
    RoutineModal.init();
    DeleteRoutineModal.init();
    TaskPickerModal.init();
    AppPickerModal.init();
  }

  function goBack() {
    return Modal.goBack();
  }

  return {
    init,
    goBack
  };
})();

App.init();
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>123</code>
			<Str sr="arg0" ve="3">find "%project_path/src" -type f | wc -l</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%total_files</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
		</Action>
		<Action sr="act60" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act61" ve="7">
			<code>37</code>
			<coll>true</coll>
			<label>Create language data files</label>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>locales</lhs>
					<op>2</op>
					<rhs>locales</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act62" ve="7">
			<code>410</code>
			<label>pt.js</label>
			<Str sr="arg0" ve="3">%project_path/src/locales/pt.json</Str>
			<Str sr="arg1" ve="3">{
  "modal_title": "Nova Rotina",
  "modal_description": "Crie uma nova rotina para seu dia a dia.",
  "form_label_name": "T√≠tulo",
  "form_placeholder_title": "Ex: Exerc√≠cios matinais",
  "form_label_description": "Descri√ß√£o",
  "form_placeholder_description": "Ex: 30 minutos de exerc√≠cios para come√ßar o dia com energia",
  "form_label_command": "Comando (opcional)",
  "form_placeholder_command": "Digite / para ver comandos dispon√≠veis",
  "form_label_category": "Categoria",
  "form_label_priority": "Prioridade",
  "form_label_time": "Hor√°rio",
  "form_label_days": "Dias da semana",
  "day_sun": "Dom",
  "day_mon": "Seg",
  "day_tue": "Ter",
  "day_wed": "Qua",
  "day_thu": "Qui",
  "day_fri": "Sex",
  "day_sat": "S√°b",
  "cancel_button": "Cancelar",
  "create_button": "Criar",
  "update_button": "Atualizar",
  "delete_modal_title": "Excluir Rotina",
  "delete_modal_description": "Tem certeza que deseja excluir esta rotina? Esta a√ß√£o n√£o pode ser desfeita.",
  "delete_button": "Excluir",
  "filters_title": "Filtros",
  "search_placeholder": "Buscar rotinas...",
  "status_filter_label": "Status",
  "status_all": "Todas",
  "status_active": "Ativas",
  "status_inactive": "Inativas",
  "priority_filter_label": "Prioridade",
  "priority_all": "Todas",
  "priority_high": "Alta",
  "priority_medium": "M√©dia",
  "priority_low": "Baixa",
  "day_filter_label": "Dia da semana",
  "day_all": "Todos",
  "day_sunday": "Domingo",
  "day_monday": "Segunda",
  "day_tuesday": "Ter√ßa",
  "day_wednesday": "Quarta",
  "day_thursday": "Quinta",
  "day_friday": "Sexta",
  "day_saturday": "S√°bado",
  "command_filter_label": "Comando",
  "command_all": "Todos",
  "empty_state_text": "Nenhuma rotina encontrada para os filtros selecionados.",
  "clear_filters_button": "Limpar filtros",
  "empty_routines_text": "Nenhuma rotina criada ainda. Crie uma agora!",
  "create_routine_button": "Criar Rotina",
  "toast_routine_created": "Rotina criada!",
  "toast_routine_updated": "Rotina atualizada!",
  "toast_routine_deleted": "Rotina exclu√≠da!",
  "toast_routine_activated": "Rotina ativada!",
  "toast_routine_deactivated": "Rotina desativada!",
  "create_routine_title": "Criar Rotina",
  "edit_routine_title": "Editar Rotina",
  "create_routine_subtitle": "Preencha os campos para criar uma nova rotina.",
  "edit_routine_subtitle": "Preencha os campos para editar a rotina.",
  "form_error_title_required": "T√≠tulo √© obrigat√≥rio",
  "form_error_description_required": "Descri√ß√£o √© obrigat√≥ria",
  "form_error_command_invalid": "Comando inv√°lido.",
  "form_error_time_required": "Hor√°rio √© obrigat√≥rio",
  "form_error_days_required": "Selecione pelo menos um dia da semana",
  "settings_modal_title": "An√∫ncio de Rotinas",
  "settings_modal_description": "Configure como ser notificado quando uma rotina executar.",
  "setting_voice_label": "Anunciar com voz do google",
  "setting_toast_label": "Exibir toast na tela",
  "setting_vibrate_label": "Vibrar dispositivo",
  "next_routine_title": "Pr√≥xima Rotina",
  "task_picker_modal_title": "Selecionar Tarefa",
  "task_picker_modal_description": "Escolha a tarefa para o comando.",
  "search_task_placeholder": "Buscar tarefas...",
  "my_tasks": "Minhas tarefas",
  "app_picker_modal_title": "Selecionar Aplicativo",
  "app_picker_modal_description": "Escolha o aplicativo para o comando.",
  "command_open_description": "Abrir aplicativo espec√≠fico",
  "command_close_description": "Fechar aplicativo espec√≠fico",
  "command_lockscreen_description": "Bloquear a tela",
  "command_bluetooth_description": "Ligar/desligar Bluetooth",
  "command_airplane_description": "Modo avi√£o",
  "command_wifi_description": "Ligar/desligar WiFi",
  "command_mobile_description": "Dados m√≥veis",
  "command_task_description": "Executar tarefa",
  "category_all": "Todas",
  "category_general": "Geral",
  "category_health": "Sa√∫de",
  "category_work": "Trabalho",
  "category_study": "Estudos",
  "category_home": "Casa",
  "category_add_button": "Adicionar",
  "category_save_button": "Salvar",
  "category_name_required": "Nome da categoria √© obrigat√≥rio",
  "category_updated": "Categoria atualizada!",
  "category_added": "Categoria adicionada!",
  "category_cannot_delete_default": "N√£o √© poss√≠vel excluir a categoria padr√£o",
  "category_confirm_delete": "Tem certeza que deseja excluir a categoria \"{categoryName}\"?",
  "category_deleted": "Categoria exclu√≠da!",
  "category_modal_title": "Gerenciar Categorias",
  "category_modal_description": "Organize suas rotinas com categorias personalizadas",
  "category_form_label_name": "Nome da Categoria",
  "category_form_placeholder_name": "Ex: Trabalho, Sa√∫de, Estudos...",
  "category_form_label_color": "Cor da Categoria",
  "my_categories": "Minhas categorias"
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act63" ve="7">
			<code>410</code>
			<label>en.js</label>
			<Str sr="arg0" ve="3">%project_path/src/locales/en.json</Str>
			<Str sr="arg1" ve="3">{
  "modal_title": "New Routine",
  "modal_description": "Create a new routine for your day to day.",
  "form_label_name": "Title",
  "form_placeholder_title": "Ex: Morning exercises",
  "form_label_description": "Description",
  "form_placeholder_description": "Ex: 30 minutes of exercises to start the day with energy",
  "form_label_command": "Command (optional)",
  "form_placeholder_command": "Type / to see available commands",
  "form_label_category": "Category",
  "form_label_priority": "Priority",
  "form_label_time": "Time",
  "form_label_days": "Days of the week",
  "day_sun": "Sun",
  "day_mon": "Mon",
  "day_tue": "Tue",
  "day_wed": "Wed",
  "day_thu": "Thu",
  "day_fri": "Fri",
  "day_sat": "Sat",
  "cancel_button": "Cancel",
  "create_button": "Create",
  "update_button": "Update",
  "delete_modal_title": "Delete Routine",
  "delete_modal_description": "Are you sure you want to delete this routine? This action cannot be undone.",
  "delete_button": "Delete",
  "filters_title": "Filters",
  "search_placeholder": "Search routines...",
  "status_filter_label": "Status",
  "status_all": "All",
  "status_active": "Active",
  "status_inactive": "Inactive",
  "priority_filter_label": "Priority",
  "priority_all": "All",
  "priority_high": "High",
  "priority_medium": "Medium",
  "priority_low": "Low",
  "day_filter_label": "Day of the week",
  "day_all": "All",
  "day_sunday": "Sunday",
  "day_monday": "Monday",
  "day_tuesday": "Tuesday",
  "day_wednesday": "Wednesday",
  "day_thursday": "Thursday",
  "day_friday": "Friday",
  "day_saturday": "Saturday",
  "command_filter_label": "Command",
  "command_all": "All",
  "empty_state_text": "No routines found for the selected filters.",
  "clear_filters_button": "Clear filters",
  "toast_routine_created": "Routine created!",
  "empty_routines_text": "No routines created yet. Create one now!",
  "create_routine_button": "Create Routine",
  "toast_routine_updated": "Routine updated!",
  "toast_routine_deleted": "Routine deleted!",
  "toast_routine_activated": "Routine activated!",
  "toast_routine_deactivated": "Routine deactivated!",
  "create_routine_title": "Create Routine",
  "edit_routine_title": "Edit Routine",
  "create_routine_subtitle": "Fill the fields to create a new routine.",
  "edit_routine_subtitle": "Fill the fields to edit the routine.",
  "form_error_title_required": "Title is required",
  "form_error_description_required": "Description is required",
  "form_error_command_invalid": "Invalid command.",
  "form_error_time_required": "Time is required",
  "form_error_days_required": "Select at least one day of the week",
  "settings_modal_title": "Routine Announcements",
  "settings_modal_description": "Configure how to be notified when a routine runs.",
  "setting_voice_label": "Announce with Google voice",
  "setting_toast_label": "Show toast on screen",
  "setting_vibrate_label": "Vibrate device",
  "next_routine_title": "Next Routine",
  "task_picker_modal_title": "Select Task",
  "task_picker_modal_description": "Choose the task for the command.",
  "search_task_placeholder": "Search tasks...",
  "my_tasks": "My tasks",
  "app_picker_modal_title": "Select Application",
  "app_picker_modal_description": "Choose the application for the command.",
  "command_open_description": "Open specific application",
  "command_close_description": "Close specific application",
  "command_lockscreen_description": "Lock the screen",
  "command_bluetooth_description": "Turn Bluetooth on/off",
  "command_airplane_description": "Airplane mode",
  "command_wifi_description": "Turn WiFi on/off",
  "command_mobile_description": "Mobile data",
  "command_task_description": "Execute task",
  "category_all": "All",
  "category_general": "General",
  "category_health": "Health",
  "category_work": "Work",
  "category_study": "Study",
  "category_home": "Home",
  "category_add_button": "Add",
  "category_save_button": "Save",
  "category_name_required": "Category name is required",
  "category_updated": "Category updated!",
  "category_added": "Category added!",
  "category_cannot_delete_default": "Cannot delete the default category",
  "category_confirm_delete": "Are you sure you want to delete the category \"{categoryName}\"?",
  "category_deleted": "Category deleted!",
  "category_modal_title": "Manage Categories",
  "category_modal_description": "Organize your routines with custom categories",
  "category_form_label_name": "Category Name",
  "category_form_placeholder_name": "E.g.: Work, Health, Studies...",
  "category_form_label_color": "Category Color",
  "my_categories": "My categories"
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act64" ve="7">
			<code>410</code>
			<label>es.js</label>
			<Str sr="arg0" ve="3">%project_path/src/locales/es.json</Str>
			<Str sr="arg1" ve="3">{
  "modal_title": "Nueva Rutina",
  "modal_description": "Crea una nueva rutina para tu d√≠a a d√≠a.",
  "form_label_name": "T√≠tulo",
  "form_placeholder_title": "Ej: Ejercicios matutinos",
  "form_label_description": "Descripci√≥n",
  "form_placeholder_description": "Ej: 30 minutos de ejercicios para empezar el d√≠a con energ√≠a",
  "form_label_command": "Comando (opcional)",
  "form_placeholder_command": "Escribe / para ver comandos disponibles",
  "form_label_category": "Categor√≠a",
  "form_label_priority": "Prioridad",
  "form_label_time": "Horario",
  "form_label_days": "D√≠as de la semana",
  "day_sun": "Dom",
  "day_mon": "Lun",
  "day_tue": "Mar",
  "day_wed": "Mi√©",
  "day_thu": "Jue",
  "day_fri": "Vie",
  "day_sat": "S√°b",
  "cancel_button": "Cancelar",
  "create_button": "Crear",
  "update_button": "Actualizar",
  "delete_modal_title": "Eliminar Rutina",
  "delete_modal_description": "¬øEst√°s seguro de que deseas eliminar esta rutina? Esta acci√≥n no se puede deshacer.",
  "delete_button": "Eliminar",
  "filters_title": "Filtros",
  "search_placeholder": "Buscar rutinas...",
  "status_filter_label": "Estado",
  "status_all": "Todas",
  "status_active": "Activas",
  "status_inactive": "Inactivas",
  "priority_filter_label": "Prioridad",
  "priority_all": "Todas",
  "priority_high": "Alta",
  "priority_medium": "Media",
  "priority_low": "Baja",
  "day_filter_label": "D√≠a de la semana",
  "day_all": "Todos",
  "day_sunday": "Domingo",
  "day_monday": "Lunes",
  "day_tuesday": "Martes",
  "day_wednesday": "Mi√©rcoles",
  "day_thursday": "Jueves",
  "day_friday": "Viernes",
  "day_saturday": "S√°bado",
  "command_filter_label": "Comando",
  "command_all": "Todos",
  "empty_state_text": "No se encontraron rutinas para los filtros seleccionados.",
  "clear_filters_button": "Limpiar filtros",
  "toast_routine_created": "¬°Rutina creada!",
  "empty_routines_text": "A√∫n no has creado ninguna rutina. ¬°Crea una ahora!",
  "create_routine_button": "Crear Rutina",
  "toast_routine_updated": "¬°Rutina actualizada!",
  "toast_routine_deleted": "¬°Rutina eliminada!",
  "toast_routine_activated": "¬°Rutina activada!",
  "toast_routine_deactivated": "¬°Rutina desactivada!",
  "create_routine_title": "Crear Rutina",
  "edit_routine_title": "Editar Rutina",
  "create_routine_subtitle": "Completa los campos para crear una nueva rutina.",
  "edit_routine_subtitle": "Completa los campos para editar la rutina.",
  "form_error_title_required": "El t√≠tulo es obligatorio",
  "form_error_description_required": "La descripci√≥n es obligatoria",
  "form_error_command_invalid": "Comando no v√°lido.",
  "form_error_time_required": "El horario es obligatorio",
  "form_error_days_required": "Selecciona al menos un d√≠a de la semana",
  "settings_modal_title": "Anuncio de Rutinas",
  "settings_modal_description": "Configura c√≥mo ser notificado cuando se ejecute una rutina.",
  "setting_voice_label": "Anunciar con voz de Google",
  "setting_toast_label": "Mostrar toast en pantalla",
  "setting_vibrate_label": "Vibrar dispositivo",
  "next_routine_title": "Pr√≥xima Rutina",
  "task_picker_modal_title": "Seleccionar Tarea",
  "task_picker_modal_description": "Elija la tarea para el comando.",
  "search_task_placeholder": "Buscar tareas...",
  "my_tasks": "Mis tareas",
  "app_picker_modal_title": "Seleccionar Aplicaci√≥n",
  "app_picker_modal_description": "Selecciona la aplicaci√≥n para el comando.",
  "command_open_description": "Abrir aplicaci√≥n espec√≠fica",
  "command_close_description": "Cerrar aplicaci√≥n espec√≠fica",
  "command_lockscreen_description": "Bloquear la pantalla",
  "command_bluetooth_description": "Encender/apagar Bluetooth",
  "command_airplane_description": "Modo avi√≥n",
  "command_wifi_description": "Encender/apagar WiFi",
  "command_mobile_description": "Datos m√≥viles",
  "command_task_description": "Ejecutar tarea",
  "category_all": "Todas",
  "category_general": "General",
  "category_health": "Salud",
  "category_work": "Trabajo",
  "category_study": "Estudios",
  "category_home": "Casa",
  "category_add_button": "Agregar",
  "category_save_button": "Guardar",
  "category_name_required": "El nombre de la categor√≠a es obligatorio",
  "category_updated": "¬°Categor√≠a actualizada!",
  "category_added": "¬°Categor√≠a agregada!",
  "category_cannot_delete_default": "No se puede eliminar la categor√≠a predeterminada",
  "category_confirm_delete": "¬øEst√°s seguro de que deseas eliminar la categor√≠a \"{categoryName}\"?",
  "category_deleted": "¬°Categor√≠a eliminada!",
  "category_modal_title": "Gestionar Categor√≠as",
  "category_modal_description": "Organiza tus rutinas con categor√≠as personalizadas",
  "category_form_label_name": "Nombre de la Categor√≠a",
  "category_form_placeholder_name": "Ej.: Trabajo, Salud, Estudios...",
  "category_form_label_color": "Color de la Categor√≠a",
  "my_categories": "Mis categor√≠as"
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act65" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act66" ve="7">
			<code>410</code>
			<Str sr="arg0" ve="3">%version_path</Str>
			<Str sr="arg1" ve="3">%project_version</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act67" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="2"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act68" ve="7">
			<code>53</code>
			<Str sr="arg0" ve="3">RF 02 - MATRIX LOADER</Str>
			<Str sr="arg1" ve="3">MATRIX LOADER</Str>
			<Int sr="arg2" val="6"/>
			<Str sr="arg3" ve="3">javascript:(MatrixLoader.complete)()</Str>
		</Action>
		<Action sr="act69" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act7" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<bool0>Or</bool0>
				<bool1>Or</bool1>
				<Condition sr="c0" ve="3">
					<lhs>%version_exists</lhs>
					<op>2</op>
					<rhs>false</rhs>
				</Condition>
				<Condition sr="c1" ve="3">
					<lhs>%file_version</lhs>
					<op>3</op>
					<rhs>%project_version</rhs>
				</Condition>
				<Condition sr="c2" ve="3">
					<lhs>%total_files</lhs>
					<op>6</op>
					<rhs>49</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act70" ve="7">
			<code>548</code>
			<on>false</on>
			<Str sr="arg0" ve="3">%file_version

%total_files

%version_exists</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">RF 01 - SHOW ROUTINE MANAGER</Str>
		</Action>
		<Action sr="act9" ve="7">
			<code>47</code>
			<se>false</se>
			<Str sr="arg0" ve="3">RF 02 - MATRIX LOADER</Str>
			<Int sr="arg1" val="10"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
	</Task>
	<Task sr="task410">
		<cdate>1756932420854</cdate>
		<edate>1756943000680</edate>
		<id>410</id>
		<nme>RF 06 - ACTIONS HANDLER</nme>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>2</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>389</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""/&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">%action=%par1
%data=%par2</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">=</Str>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>596</code>
			<Str sr="arg0" ve="3">%pkg_list</Str>
			<Int sr="arg1" val="27"/>
			<Str sr="arg2" ve="3">%current_pkgs_hash</Str>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>342</code>
			<Int sr="arg0" val="5"/>
			<Str sr="arg1" ve="3">%apps_path</Str>
			<Str sr="arg2" ve="3">%apps_exists</Str>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="1"/>
		</Action>
		<Action sr="act12" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<bool0>And</bool0>
				<Condition sr="c0" ve="3">
					<lhs>%current_pkgs_hash</lhs>
					<op>2</op>
					<rhs>%pkgs_hash</rhs>
				</Condition>
				<Condition sr="c1" ve="3">
					<lhs>%apps_exists</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act13" ve="7">
			<code>417</code>
			<Str sr="arg0" ve="3">%apps_path</Str>
			<Str sr="arg1" ve="3">%apps_data</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act15" ve="7">
			<code>130</code>
			<label>&lt;= %apps_data</label>
			<Str sr="arg0" ve="3">RF 09 - APP DATA MANAGER</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="0"/>
			<Str sr="arg2" ve="3">get_app_info</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">%apps_data</Str>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%pkg_list*</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">const apps = JSON.parse(local("apps_data"));

apps.sort(function(a, b) {
  const nameA = a.name.toLowerCase();
  const nameB = b.name.toLowerCase();
  return nameA &lt; nameB ? -1 : 1;
});

apps_data = JSON.stringify(apps, null, 2);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act17" ve="7">
			<code>410</code>
			<Str sr="arg0" ve="3">%apps_path</Str>
			<Str sr="arg1" ve="3">%apps_data</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act18" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%pkgs_hash</Str>
			<Str sr="arg1" ve="3">%current_pkgs_hash</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act19" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act2" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%action</lhs>
					<op>2</op>
					<rhs>update_routines</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act20" ve="7">
			<code>53</code>
			<Str sr="arg0" ve="3">RF 01 - ROUTINE MANAGER UI</Str>
			<Str sr="arg1" ve="3">ROUTINE FLOW</Str>
			<Int sr="arg2" val="6"/>
			<Str sr="arg3" ve="3">javascript:(()=&gt;{ AppPickerModal.render(%apps_data) })()</Str>
		</Action>
		<Action sr="act21" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%action</lhs>
					<op>2</op>
					<rhs>load_tasks</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act22" ve="7">
			<code>347</code>
			<Int sr="arg0" val="7"/>
			<Str sr="arg1" ve="3"/>
			<Str sr="arg2" ve="3">%tasks</Str>
		</Action>
		<Action sr="act23" ve="7">
			<code>53</code>
			<Str sr="arg0" ve="3">RF 01 - ROUTINE MANAGER UI</Str>
			<Str sr="arg1" ve="3">ROUTINE FLOW</Str>
			<Int sr="arg2" val="6"/>
			<Str sr="arg3" ve="3">javascript:(()=&gt; { TaskPickerModal.load(["%tasks(+", ")"]); TaskPickerModal.updateAll(); })()</Str>
		</Action>
		<Action sr="act24" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act3" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">RF 08 - ROUTINE DATA MANAGER</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">save_routine_data</Str>
			<Str sr="arg3" ve="3">%data</Str>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">RF 05 - SCHEDULE NEXT ROUTINE</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="1"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%action</lhs>
					<op>2</op>
					<rhs>update_categories</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act6" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">RF 07 - CATEGORY DATA MANAGER</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">save_category_data</Str>
			<Str sr="arg3" ve="3">%data</Str>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="1"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%action</lhs>
					<op>2</op>
					<rhs>load_apps</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act8" ve="7">
			<code>130</code>
			<label>&lt;= %pkg_list</label>
			<Str sr="arg0" ve="3">RF 09 - APP DATA MANAGER</Str>
			<Int sr="arg1">
				<var>%priority+1</var>
			</Int>
			<Int sr="arg10" val="0"/>
			<Str sr="arg2" ve="3">list_packages</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>389</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""/&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">%apps_path=%project_path/apps.json
%pkg_list=%pkg_list(+)</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">=</Str>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1"/>
		</Action>
	</Task>
	<Task sr="task412">
		<cdate>1754013108238</cdate>
		<edate>1756942981168</edate>
		<id>412</id>
		<nme>RF 04 - COMMAND EXECUTOR</nme>
		<pri>100</pri>
		<rty>1</rty>
		<Action sr="act0" ve="7">
			<code>547</code>
			<on>false</on>
			<Str sr="arg0" ve="3">%routine_command</Str>
			<Str sr="arg1" ve="3">/open Acode </Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>2</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act10" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%command</lhs>
					<op>2</op>
					<rhs>/mobile_data</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act11" ve="7">
			<code>375</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%aw_output
Output
Output resulting from the command. May be empty.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">svc data enable</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="10"/>
			<Int sr="arg5" val="0"/>
			<Str sr="arg6" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%value</lhs>
					<op>2</op>
					<rhs>on</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act12" ve="7">
			<code>375</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%aw_output
Output
Output resulting from the command. May be empty.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">svc data disable</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="10"/>
			<Int sr="arg5" val="0"/>
			<Str sr="arg6" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%value</lhs>
					<op>2</op>
					<rhs>off</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act13" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%command</lhs>
					<op>2</op>
					<rhs>/bluetooth</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act14" ve="7">
			<code>375</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%aw_output
Output
Output resulting from the command. May be empty.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">svc bluetooth enable</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="10"/>
			<Int sr="arg5" val="0"/>
			<Str sr="arg6" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%value</lhs>
					<op>2</op>
					<rhs>on</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act15" ve="7">
			<code>375</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%aw_output
Output
Output resulting from the command. May be empty.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">svc bluetooth disable</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="10"/>
			<Int sr="arg5" val="0"/>
			<Str sr="arg6" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%value</lhs>
					<op>2</op>
					<rhs>off</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act16" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%command</lhs>
					<op>2</op>
					<rhs>/airplane</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act17" ve="7">
			<code>333</code>
			<Int sr="arg0" val="1"/>
			<Bundle sr="arg1">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%new_state
New State
true if it after the action the setting is enabled, false if not&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%value</lhs>
					<op>2</op>
					<rhs>on</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act18" ve="7">
			<code>333</code>
			<Int sr="arg0" val="0"/>
			<Bundle sr="arg1">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%new_state
New State
true if it after the action the setting is enabled, false if not&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%value</lhs>
					<op>2</op>
					<rhs>off</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act19" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%command</lhs>
					<op>2</op>
					<rhs>/lockscreen</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act2" ve="7">
			<code>396</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%command
0. Command
Can also be accessed as an array&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%value
0. Value
Can also be accessed as an array&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%mt_groups()
Groups
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%mt_match_found
Is Match
true if there was a match, false otherwise&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%mt_match
Match
Can also be accessed as an array&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">%routine_command</Str>
			<Str sr="arg3" ve="3">\/(?&lt;command&gt;\w+)\s?(?&lt;value&gt;.*)</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act20" ve="7">
			<code>248</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="1"/>
		</Action>
		<Action sr="act21" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%command</lhs>
					<op>2</op>
					<rhs>/run_task</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act22" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">%value</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act23" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act3" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%command</lhs>
					<op>2</op>
					<rhs>/open</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act4" ve="7">
			<code>20</code>
			<App sr="arg0">
				<appClass></appClass>
				<appPkg>%value</appPkg>
				<label>%value</label>
			</App>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%command</lhs>
					<op>2</op>
					<rhs>/close</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act6" ve="7">
			<code>18</code>
			<App sr="arg0">
				<appClass></appClass>
				<appPkg>%value</appPkg>
				<label>%value</label>
			</App>
			<Int sr="arg1" val="0"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%command</lhs>
					<op>2</op>
					<rhs>/wifi</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act8" ve="7">
			<code>375</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%aw_output
Output
Output resulting from the command. May be empty.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">svc wifi enable</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="10"/>
			<Int sr="arg5" val="0"/>
			<Str sr="arg6" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%value</lhs>
					<op>2</op>
					<rhs>on</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act9" ve="7">
			<code>375</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%aw_output
Output
Output resulting from the command. May be empty.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">svc wifi disable</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="10"/>
			<Int sr="arg5" val="0"/>
			<Str sr="arg6" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%value</lhs>
					<op>2</op>
					<rhs>off</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Img sr="icn" ve="2">
			<nme>mw_action_settings</nme>
			<tint>-1</tint>
		</Img>
	</Task>
	<Task sr="task413">
		<cdate>1747360746028</cdate>
		<edate>1756943002418</edate>
		<id>413</id>
		<nme>RF 08 - ROUTINE DATA MANAGER</nme>
		<pri>100</pri>
		<rty>1</rty>
		<Action sr="act0" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>2</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>389</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""/&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">%routines_path=%project_path/routines.json
%action=%par1</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">=</Str>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%routine_data</Str>
			<Str sr="arg1" ve="3">%par2</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>410</code>
			<Str sr="arg0" ve="3">%routines_path</Str>
			<Str sr="arg1" ve="3">%routine_data</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act12" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act2" ve="7">
			<code>409</code>
			<Str sr="arg0" ve="3">%project_path</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="1"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%action</lhs>
					<op>2</op>
					<rhs>get_routine_data</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act4" ve="7">
			<code>342</code>
			<Int sr="arg0" val="5"/>
			<Str sr="arg1" ve="3">%routines_path</Str>
			<Str sr="arg2" ve="3">%file_exists</Str>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="1"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%file_exists</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act6" ve="7">
			<code>417</code>
			<Str sr="arg0" ve="3">%routines_path</Str>
			<Str sr="arg1" ve="3">%routine_data</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act8" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%routine_data</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%action</lhs>
					<op>2</op>
					<rhs>save_routine_data</rhs>
				</Condition>
			</ConditionList>
		</Action>
	</Task>
	<Task sr="task414">
		<cdate>1754674863107</cdate>
		<edate>1756943004129</edate>
		<id>414</id>
		<nme>RF 09 - APP DATA MANAGER</nme>
		<pri>100</pri>
		<rty>1</rty>
		<Action sr="act0" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>2</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%action</Str>
			<Str sr="arg1" ve="3">%par1</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>369</code>
			<Str sr="arg0" ve="3">%pkg_list</Str>
			<Int sr="arg1" val="13"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="1"/>
			<Str sr="arg4" ve="3">%pkg_list*</Str>
		</Action>
		<Action sr="act12" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%action</lhs>
					<op>2</op>
					<rhs>get_app_info</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act13" ve="7">
			<code>335</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%app_icon()
Icon
Icon for the app&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%app_name()
Name
Name of the App&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%app_package()
Package
Unique package name for the app&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">%pkg_list(+/)</Str>
			<Str sr="arg2" ve="3"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>393</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""/&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">%app_name
%app_package</Str>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">{
  "name": "%app_name",
  "pkg": "%app_package"
}</Str>
			<Str sr="arg5" ve="3">%apps_data</Str>
			<Str sr="arg6" ve="3"/>
			<Int sr="arg7" val="0"/>
		</Action>
		<Action sr="act15" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">[%apps_data(+,)]</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act2" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%action</lhs>
					<op>2</op>
					<rhs>list_packages</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act3" ve="7">
			<code>664</code>
			<Str sr="arg0" ve="3">pm</Str>
			<Str sr="arg1" ve="3">CONTEXT</Str>
			<Str sr="arg2" ve="3">getPackageManager
{PackageManager} ()</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Str sr="arg9" ve="3"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>664</code>
			<Str sr="arg0" ve="3">start</Str>
			<Str sr="arg1" ve="3">Intent</Str>
			<Str sr="arg2" ve="3">new
{Intent} (String)</Str>
			<Str sr="arg3" ve="3">android.intent.action.MAIN</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Str sr="arg9" ve="3"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>664</code>
			<Str sr="arg0" ve="3"/>
			<Str sr="arg1" ve="3">start</Str>
			<Str sr="arg2" ve="3">addCategory
{Intent} (String)</Str>
			<Str sr="arg3" ve="3">android.intent.category.LAUNCHER</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Str sr="arg9" ve="3"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>664</code>
			<Str sr="arg0" ve="3">%list</Str>
			<Str sr="arg1" ve="3">pm</Str>
			<Str sr="arg2" ve="3">queryIntentActivities
{List} (Intent, int)</Str>
			<Str sr="arg3" ve="3">start</Str>
			<Str sr="arg4" ve="3">0</Str>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Str sr="arg9" ve="3"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>592</code>
			<Str sr="arg0" ve="3">%list</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="0"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>396</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%pkg_list
0. Pkg list
Can also be accessed as an array&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%mt_groups()
Groups
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%mt_match_found
Is Match
true if there was a match, false otherwise&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%mt_match
Match
Can also be accessed as an array&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">%list</Str>
			<Str sr="arg3" ve="3">(?&lt;pkg_list&gt;[a-z]+\.\S+)\/</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>369</code>
			<Str sr="arg0" ve="3">%pkg_list</Str>
			<Int sr="arg1" val="0"/>
		</Action>
	</Task>
</TaskerData>
